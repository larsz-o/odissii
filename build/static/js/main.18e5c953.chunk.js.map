{"version":3,"sources":["redux/actions/userActions.js","redux/reducers/userReducer.js","redux/actions/loginActions.js","redux/reducers/loginReducer.js","redux/actions/peopleActions.js","redux/reducers/peopleReducer.js","redux/actions/feedbackActions.js","redux/reducers/feedbackReducer.js","redux/reducers/searchReducer.js","redux/actions/followupActions.js","redux/reducers/followupReducer.js","redux/reducers/sortReducer.js","redux/reducers/idReducer.js","redux/actions/qualityActions.js","redux/reducers/qualityReducer.js","redux/reducers/navReducer.js","redux/reducers/index.js","components/GridContainer/GridContainer.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","constants.js","components/Nav/Nav.js","components/DashboardView/SupervisorDashboard/Graphs/PastTwelveMonths.js","components/DashboardView/SupervisorDashboard/Graphs/QuarterlySummary.js","components/DashboardView/SupervisorDashboard/Graphs/PastThreeWeeks.js","components/DashboardView/SupervisorDashboard/SupervisorDashboard.js","components/DashboardView/ManagerDashboard/Graphs/IndividualManagerGraph.js","components/DashboardView/ManagerDashboard/Graphs/ManagerOverviewGraph.js","components/DashboardView/ManagerDashboard/ManagerDashboard.js","components/DashboardView/DashboardView.js","components/EmployeesView/EmployeeAppBar/AllEmployeeAppBar.js","components/EmployeesView/EmployeeList/AllEmployeeList.js","components/EmployeesView/AllEmployeesView.js","components/EmployeesView/EmployeeAppBar/EmployeeAppBar.js","components/EmployeesView/EmployeeList/EmployeeList.js","components/EmployeesView/SupervisorEmployees/SupervisorEmployees.js","components/EmployeesView/EmployeesView.js","components/EmployeesView/IndividualEmployeeSummaryView/DisplayFeedback/DisplayFeedback.js","components/EmployeesView/IndividualEmployeeSummaryView/DisplayGraphs/DisplayOverallGraph/DisplayOverallGraph.js","components/EmployeesView/IndividualEmployeeSummaryView/DisplayGraphs/DisplayWeeklyGraph/DisplayWeeklyGraph.js","components/EmployeesView/IndividualEmployeeSummaryView/DisplayGraphs/DisplayQuarterlyGraph/DisplayQuarterlyGraph.js","components/EmployeesView/IndividualEmployeeSummaryView/DisplayGraphs/DisplayAnnuallyGraph/DisplayAnnuallyGraph.js","components/EmployeesView/IndividualEmployeeSummaryView/DisplaySwipeableTabs/DisplaySwipeableTabs.js","components/EmployeesView/IndividualEmployeeSummaryView/IndividualEmployeeSummaryView.js","components/FeedbackFormView/FeedbackFormAppBar.js","components/FeedbackFormView/FeedbackFormView.js","components/FeedbackFormConfirmationView/FeedbackFormConfirmationView.js","components/FeedbackDetailView/FeedbackDetailView.js","components/EmployeeFormView/EmployeeFormView.js","components/UserPage/UserPage.js","components/EditPerson/EditPersonAppBar/EditSupervisorAppBar.js","components/EditPerson/EditSupervisor.js","components/EditPerson/EditPersonAppBar/EditEmployeeAppBar.js","components/EditPerson/EditEmployee.js","components/AddPerson/AddPersonAppBar.js","components/AddPerson/AddPerson.js","components/SupervisorDetailView/SupervisorDetailAppBar.js","components/SupervisorDetailView/SupervisorDetailView.js","components/ResetPassword/ResetPassword.js","components/ResetPassword/NewPassword/NewPassword.js","App.js","redux/sagas/userSaga.js","redux/requests/userRequests.js","redux/requests/loginRequests.js","redux/sagas/loginSaga.js","redux/sagas/employeeSaga.js","redux/sagas/supervisorSaga.js","redux/sagas/feedbackSaga.js","redux/sagas/followupSaga.js","redux/sagas/qualitySaga.js","redux/sagas/index.js","index.js"],"names":["USER_ACTIONS","FETCH_USER","SET_USER","UNSET_USER","REQUEST_START","REQUEST_DONE","LOGOUT","USER_FETCH_FAILED","combineReducers","id","state","arguments","length","undefined","action","type","user","userName","username","employeeId","first_name","last_name","email_address","role","isLoading","LOGIN_ACTIONS","LOGIN","CLEAR_LOGIN_ERROR","LOGIN_REQUEST_DONE","LOGIN_FAILED","LOGIN_FAILED_NO_CODE","INPUT_ERROR","triggerLogin","password","payload","triggerLogout","message","PEOPLE_ACTIONS","FETCH_EMPLOYEES","FETCH_ALL_EMPLOYEES","ADD_EMPLOYEE","DELETE_EMPLOYEE","UPDATE_EMPLOYEE","FETCH_SUPERVISORS","ADD_SUPERVISOR","UPDATE_SUPERVISOR","DELETE_SUPERVISOR","SET_SUPERVISORS","SET_SUPERVISOR_EMPLOYEES","SET_ALL_EMPLOYEES","peopleType","supervisors","supervisorEmployees","allEmployees","supervisorToView","staff","Object","objectSpread","FEEDBACK_ACTIONS","FETCH_CURRENT_EMPLOYEE_FEEDBACK","FETCH_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR","FETCH_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS","ADD_FEEDBACK","FEEDBACK_POST_SUCCESS","FEEDBACK_POST_ERROR","DISPLAY_FEEDBACK_CONFIRMATION","FEEDBACK_CONFIRMATION_ACKWNOLEDGED","UPDATE_FEEDBACK","SET_CURRENT_EMPLOYEE_FEEDBACK","SET_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR","SET_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS","SET_ALL_DETAILED_FEEDBACK_BY_MANAGER_SUPERVISORS","feedbackTypes","currentEmployee","allFeedbackBySupervisor","feedback","newPostedFeedback","confirmationDisplayed","searchReducer","FOLLOW_UP_ACTIONS","FETCH_ALL_PENDING_FOLLOWUP","FETCH_EMPLOYEE_PENDING_FOLLOWUP","ADD_FOLLOWUP","FOLLOWUP_POST_SUCCESS","FOLLOWUP_POST_ERROR","COMPLETE_FOLLOWUP","SET_ALL_PENDING_FOLLOWUP","SET_EMPLOYEE_PENDING_FOLLOWUP","newPostedFollowup","initialState","column","direction","sortReducer","idReducer","QUALITY_ACTIONS","FETCH_FEEDBACK_QUALITY_CATEGORIES","SET_FEEDBACK_QUALITY_CATEGORIES","quality_types","navReducer","store","_combineReducers","login","people","search","sort","followup","defineProperty","nav","GridContainer","classes","this","props","react_default","a","createElement","index_es","container","spacing","item","xs","md","style","height","className","content","children","React","Component","withStyles","theme","_content","backgroundColor","breakpoints","down","up","styles","button","margin","width","LoginPage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","console","log","dispatch","handleInputChangeFor","propertyName","setState","target","value","history","push","_this2","renderAlert","onSubmit","htmlFor","name","onChange","onClick","variant","color","connect","ROLES","RegisterPage","registerUser","_this$state","body","role_id","axios","post","then","response","status","catch","disabled","map","key","Link","to","USER_ROLES","SUPERVISOR","MANAGER","stickToBottom","position","bottom","left","Nav","handleChange","logout","label","icon","ShowChart_default","component","Group_default","PersonAdd_default","Create_default","barOptions","scales","xAxes","stacked","yAxes","PastTwelveMonths","_this$props","data","monthlyTotals","totalsByMonth","graphData","labels","getNamesOfPastTwelveMonths","datasets","qualityByMonth","getIdForQuality","react_chartjs_2_es","options","types","find","names","i","moment","subtract","format","totals","qualityId","values","month","sortFeedbackByMonth","getQualityTotalsForMonth","monthNumber","monthStart","startOf","monthEnd","endOf","filter","entry","entryDate","date_created","feedbackForMonth","blankMonthlySummary","reduce","summary","quality","quality_id","QuarterlySummary","feedbackQualityForCurrentQuarter","currentQuarter","quarter","praise","instruct","correct","PastThreeWeeks","weekNames","namesOfPastThreeWeeks","threeWeeksFeedback","lastThreeWeeksOnly","weeklyQualityTotals","totalsByWeek","qualityByWeek","isSameOrAfter","weekThreeStart","weekTwoStart","weekOneStart","thisWeekStart","blankSummary","date","isBetween","threeWeeksAgo","twoWeeksAgo","oneWeekAgo","week","SupervisorDashboard","feedbackHistory","Graphs_QuarterlySummary","Graphs_PastThreeWeeks","Graphs_PastTwelveMonths","responsive","IndividualManagerGraph","supervisorSummary","ManagerOverviewGraph","managerOverview","ManagerDashboard","editPerson","concat","getSupervisors","method","url","sortSupervisors","error","getFeedback","idArray","today","Date","end","start","index","findIndex","supervisor","supervisor_id","sid","supervisorFeedback","parseInt","sortData","getFeedbackDetails","reports","navTo","navToEmployees","array","IDs","feedbackCounts","Graphs_ManagerOverviewGraph","icons_index_es","Graphs_IndividualManagerGraph","react_csv","filename","DashboardView","userDashboard","DashboardView_SupervisorDashboard_SupervisorDashboard","DashboardView_ManagerDashboard_ManagerDashboard","components_Nav_Nav","grow","flexGrow","input","EmployeeAppBar","handleClick","ArrowBack_default","Search_default","placeholder","withRouter","require","table","marginTop","paddingBottom","tableCell","padding","textAlign","grid","display","justifyContent","alignItems","gridRow","avatar","marginRight","marginLeft","invertDirection","asc","desc","AllEmployeeList","getEmployees","handleSort","columnName","orderBy","filteredEmployees","employee","toLowerCase","indexOf","ArrowDropUp_default","ArrowDropDown_default","alt","src","image_path","recent","Edit_default","employees","SupervisorEmployees","AllEmployeeAppBar","EmployeeList_AllEmployeeList","EmployeeList","alert","incomplete","Announcement_default","EmployeesView_EmployeeAppBar_EmployeeAppBar","EmployeesView_EmployeeList_EmployeeList","EmployeesView","userEmployees","EmployeesView_SupervisorEmployees_SupervisorEmployees","praiseAvatar","correctAvatar","instructAvatar","row","DisplayFeedback","clickHandler","feedbackId","TableCell_default","Avatar_default","Icon_default","TableRow_default","details","slice","DisplayOverallGraph","qualityCount","employeeSummary","totalFeedback","lastFourWeeksOnly","DisplayWeeklyGraph","weekFourStart","fourWeeksAgo","barData","ticks","suggestedMax","DisplayQuarterlyGraph","borderWidth","getQuarterlyMonthlyNames","DisplayAnnuallyGraph","getMonthlyNames","TabContainer","_ref","dir","DisplaySwipeableTabs","handleChangeIndex","weeklyQualityCount","quarterlyQualityCount","annuallyQualityCount","AppBar_default","Tabs_default","indicatorColor","textColor","fullWidth","Tab_default","lib_default","axis","onChangeIndex","DisplayGraphs_DisplayWeeklyGraph_DisplayWeeklyGraph","DisplayGraphs_DisplayQuarterlyGraph_DisplayQuarterlyGraph","DisplayGraphs_DisplayAnnuallyGraph_DisplayAnnuallyGraph","root","palette","background","paper","withTheme","bigGrid","IndividualEmployeeSummaryView","createNewFeedbackClick","totalQualityCount","getTotalFeedbackCount","get","_this3","btn","Button_default","aria-label","stickyButton","DisplayGraphs_DisplayOverallGraph_DisplayOverallGraph","IndividualEmployeeSummaryView_DisplaySwipeableTabs_DisplaySwipeableTabs","Table_default","TableHead_default","TableBody_default","feedbacksAtIndex","IndividualEmployeeSummaryView_DisplayFeedback_DisplayFeedback","FeedbackFormAppBar","form","maxWidth","image","FeedbackFormView","handleInputChange","formField","includes","prevState","handleFormSubmit","taskRelated","cultureRelated","followUpNeeded","followUpDate","supervisorId","email","employeeHasPendingFollowUp","Number","dateCreated","put","openCloudinary","window","cloudinary","openUploadWidget","config","result","info","backToDashboard","getQualityIdByName","cloud_name","upload_preset","_this$props2","praiseId","instructId","correctId","_this$state2","FeedbackFormView_FeedbackFormAppBar","marginBottom","required","shrink","flexDirection","toString","control","checked","multiline","rows","InputLabelProps","CloudUpload_default","FeedbackFormConfirmationView","employee_id","Grid_default","Typography_default","gutterBottom","task_related","culture_related","follow_up_date","booleanFields","FeedbackDetailView","getQualityName","fieldName","formFields","String","abandonChanges","originalFeedback","editedFeedback","date_edited","follow_up_needed","backToPreviousPage","match","params","editingCutoffTime","add","isBefore","_","isEqual","justify","EmployeeFormView","UserPage","EditPersonAppBar","formControl","EditSupervisor","componentDidMount","personId","swal","handleChangefor","property","EditSupervisorAppBar","EditEmployee","getEmployee","handleChangeFor","handleCheck","inactive","EditEmployeeAppBar","AddPersonAppBar","AddPerson","createEmployee","createSupervisor","AddPerson_AddPersonAppBar","SupervisorDetailAppBar","SupervisorDetailView","getSupervisorInformation","getSupervisorFeedback","keys","SupervisorDetailView_SupervisorDetailAppBar","ResetPassword","handleSubmit","now","NewPassword","_this$setState","confirm_password","token","App","components_GridContainer_GridContainer","HashRouter","Switch","Redirect","exact","from","Route","path","AllEmployeesView","render","fetchUser","userSaga","regenerator_default","wrap","_context","prev","next","headers","Content-Type","withCredentials","sent","t0","stop","_marked","_context2","takeLatest","_marked2","callLogin","loginUser","logoutUser","loginSaga","loginSaga_marked","loginSaga_marked2","_context3","_marked3","fetchAllEmployees","addEmployee","deleteEmployee","updateEmployee","employeeSaga","allEmployeeResponse","responseAction","employeeSaga_marked","employeeSaga_marked2","delete","employeeSaga_marked3","_context4","_marked4","_context5","_marked5","fetchSupervisors","addSupervisor","updateSupervisor","deleteSupervisor","supervisorSaga","supervisorResponse","supervisorSaga_marked","supervisorSaga_marked2","supervisorSaga_marked3","supervisorSaga_marked4","supervisorSaga_marked5","fetchCurrentEmployeeFeedback","fetchAllFeedbackByCurrentSupervisor","fetchAllFeedbackByManagerSupervisors","addFeedback","updateFeedback","feedbackSaga","feedbackResponse","feedbackSaga_marked","feedbackSaga_marked2","feedbackSaga_marked3","postResponse","postedFeedback","feedbackSaga_marked4","feedbackSaga_marked5","_context6","_marked6","fetchAllPendingFollowup","fetchEmployeePendingFollowup","addFollowup","completeFollowup","followupSaga","followupResponse","followupSaga_marked","followupSaga_marked2","postedFollowup","followupSaga_marked3","followupId","followupSaga_marked4","followupSaga_marked5","fetchFeedbackQualityCategories","qualitySaga","qualitiesResponse","qualitySaga_marked","qualitySaga_marked2","rootSaga","all","sagas_marked","middlewares","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","apply","createMuiTheme","typography","useNextVariants","primary","light","main","dark","contrastText","secondary","constrastText","run","ReactDOM","react_redux_es","core_styles","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.18e5c953.chunk.js","sourcesContent":["\n//String Constants are a good way to keep your code DRY\n//Imagine changing an action everywhere its used. Gross!\n//This way we only need to change it one place.\nexport const USER_ACTIONS = {\n  FETCH_USER: 'FETCH_USER',\n  SET_USER: 'SET_USER_ACTION',\n  UNSET_USER: 'UNSET_USER_ACTION',\n  REQUEST_START: 'REQUEST_START_USER_ACTION',\n  REQUEST_DONE: 'REQUEST_DONE_USER_ACTION',\n  LOGOUT: 'LOGOUT',\n  USER_FETCH_FAILED: 'USER_FETCH_FAILED',\n};\n\n\n","import { combineReducers } from 'redux';\nimport { USER_ACTIONS } from '../actions/userActions';\n\n//id holds onto the user.id from passport/database\nconst id = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.id || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\n//userName holds onto the user.username from passport/database\nconst userName = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.username || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst first_name = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.first_name || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst last_name = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.last_name || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst employeeId = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.employeeId || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst email_address = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.email_address || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst role = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.role || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\n//isLoading holds the boolean that tracks whether or not this async call is out in the internet or not\nconst isLoading = (state = false, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.REQUEST_START:\n      return true;\n    case USER_ACTIONS.REQUEST_DONE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n//make one object that has keys id, username, isLoading\nexport default combineReducers({\n  id,\n  userName,\n  employeeId,\n  first_name,\n  last_name,\n  email_address,\n  role,\n  isLoading,\n});\n","//String Constants are a good way to keep your code DRY\n//Imagine changing an action everywhere its used. Gross!\n//This way we only need to change it one place.\nexport const LOGIN_ACTIONS = {\n  LOGIN: 'LOGIN',\n  CLEAR_LOGIN_ERROR: 'CLEAR_LOGIN_ERROR',\n  REQUEST_START: 'REQUEST_START',\n  LOGIN_REQUEST_DONE: 'LOGIN_REQUEST_DONE',\n  LOGIN_FAILED: 'LOGIN_FAILED',\n  LOGIN_FAILED_NO_CODE: 'LOGIN_FAILED_NO_CODE',\n  INPUT_ERROR: 'INPUT_ERROR',\n  LOGOUT: 'LOGOUT',\n};\n\n//These are functions - each returns an action.\n//You could call one an action creator.\nexport const clearError = () => ({\n  type: LOGIN_ACTIONS.CLEAR_LOGIN_ERROR,\n});\n\n\nexport const triggerLogin = (username, password) => ({\n  type: LOGIN_ACTIONS.LOGIN,\n  payload: {\n    username,\n    password,\n  },\n});\n\nexport const triggerLogout = () => ({\n  type: LOGIN_ACTIONS.LOGOUT,\n});\n\nexport function formError() {\n  return {\n    type: LOGIN_ACTIONS.INPUT_ERROR,\n    payload: 'Enter your username and password!',\n  };\n}\n","import { combineReducers } from 'redux';\nimport { LOGIN_ACTIONS } from '../actions/loginActions';\n\n//message holds the string that will display on the login screen if there's an error\nconst message = (state = '', action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.CLEAR_LOGIN_ERROR:\n      return '';\n    case LOGIN_ACTIONS.LOGIN_FAILED:\n      return 'Ooops! The username and password didn\\'t match. Try again!';\n    case LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE:\n      return 'Ooops! Something went wrong! Is the server running?';\n    case LOGIN_ACTIONS.INPUT_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n//isLoading holds the boolean that tracks whether or not this async call is out in the internet or not\nconst isLoading = (state = false, action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.REQUEST_START:\n      return true;\n    case LOGIN_ACTIONS.REQUEST_DONE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n//make one object that has keys message, isLoading\nexport default combineReducers({\n  isLoading,\n  message,\n});\n","export const PEOPLE_ACTIONS = {\n    FETCH_EMPLOYEES: 'FETCH_EMPLOYEES',\n    FETCH_ALL_EMPLOYEES: 'FETCH_ALL_EMPLOYEES',\n    ADD_EMPLOYEE: 'ADD_EMPLOYEE',\n    DELETE_EMPLOYEE: 'DELETE_EMPLOYEE',\n    UPDATE_EMPLOYEE: 'UPDATE_EMPLOYEE',\n    FETCH_SUPERVISORS: 'FETCH_SUPERVISORS',\n    ADD_SUPERVISOR: 'ADD_SUPERVISOR',\n    UPDATE_SUPERVISOR: 'UPDATE_SUPERVISOR',\n    DELETE_SUPERVISOR: 'DELETE_SUPERVISOR',\n    SET_SUPERVISORS: 'SET_SUPERVISORS',\n    SET_SUPERVISOR_EMPLOYEES: 'SET_SUPERVISOR_EMPLOYEES',\n    SET_ALL_EMPLOYEES: 'SET_ALL_EMPLOYEES',\n}","import { combineReducers } from 'redux';\nimport { PEOPLE_ACTIONS } from '../actions/peopleActions';\n\nconst peopleType = {\n    supervisors: [],\n    supervisorEmployees: [],\n    allEmployees: [],\n    supervisorToView: ''\n}\n\nconst staff = (state = peopleType, action) => {\n    if (action.type === PEOPLE_ACTIONS.SET_SUPERVISORS) {\n        return {...state, supervisors: action.payload};\n    } else if (action.type === PEOPLE_ACTIONS.SET_SUPERVISOR_EMPLOYEES) {\n        return {...state, supervisorEmployees: action.payload};\n    } else if (action.type === PEOPLE_ACTIONS.SET_ALL_EMPLOYEES) {\n        return {...state, allEmployees: action.payload}\n    } else if (action.type === 'SET_SUPERVISOR_TO_VIEW'){\n        return {...state, supervisorToView: action.payload}\n    }\n    return state;\n};\n\nexport default combineReducers({\n    staff,\n});","export const FEEDBACK_ACTIONS = {\n  FETCH_CURRENT_EMPLOYEE_FEEDBACK: 'FETCH_CURRENT_EMPLOYEE_FEEDBACK',\n  FETCH_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR: 'FETCH_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR',\n  FETCH_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS: 'FETCH_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS',\n  ADD_FEEDBACK: 'ADD_FEEDBACK',\n  FEEDBACK_POST_SUCCESS: 'FEEDBACK_POST_SUCCESS',\n  FEEDBACK_POST_ERROR: 'FEEDBACK_POST_ERROR',\n  DISPLAY_FEEDBACK_CONFIRMATION: 'DISPLAY_FEEDBACK_CONFIRMATION',\n  FEEDBACK_CONFIRMATION_ACKWNOLEDGED: 'FEEDBACK_CONFIRMATION_ACKWNOLEDGED',\n  UPDATE_FEEDBACK: 'UPDATE_FEEDBACK',\n  SET_CURRENT_EMPLOYEE_FEEDBACK: 'SET_CURRENT_EMPLOYEE_FEEDBACK',\n  SET_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR: 'SET_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR',\n  SET_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS: 'SET_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS',\n  SET_ALL_DETAILED_FEEDBACK_BY_MANAGER_SUPERVISORS: 'SET_ALL_DETAILED_FEEDBACK_BY_MANAGER_SUPERVISORS'\n};","import { combineReducers } from 'redux';\nimport { FEEDBACK_ACTIONS } from '../actions/feedbackActions'; \n\nconst feedbackTypes = {\n    currentEmployee: [],\n    allFeedbackBySupervisor: [],\n}\n\nconst feedback = (state = feedbackTypes, action) => {\n   if (action.type === FEEDBACK_ACTIONS.SET_CURRENT_EMPLOYEE_FEEDBACK) {\n        return {...state, currentEmployee: action.payload};     \n    }  else if (action.type === FEEDBACK_ACTIONS.SET_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR){\n        return {...state, allFeedbackBySupervisor: action.payload}; \n     } return state; \n}\n\n// this is an object representing a row of feedback just added to the database\n// if this contains an object, the feedback form view should redirect to the\n// confirmation page and show the newly posted feedback\n// when the user acknowledges the confirmation by clicking \"Okay\" on the feedback confirmation view,\n// this object is cleared, as the user should be redirected to their main dashboard view\nconst newPostedFeedback = (state = null, action) => {\n    if (action.type === FEEDBACK_ACTIONS.FEEDBACK_POST_SUCCESS) {\n      return action.payload;\n    } else if (action.type == FEEDBACK_ACTIONS.FEEDBACK_CONFIRMATION_ACKWNOLEDGED) {\n      return null;\n    } else {\n      return state;\n    }\n};\n\nconst confirmationDisplayed = (state = false, action) => {\n    if (action.type === FEEDBACK_ACTIONS.DISPLAY_FEEDBACK_CONFIRMATION) {\n        return true;\n    } else if (action.type === FEEDBACK_ACTIONS.FEEDBACK_CONFIRMATION_ACKWNOLEDGED) {\n        return false;\n    } else {\n        return state;\n    }\n};\n\nexport default combineReducers({\n   feedback,\n   newPostedFeedback,\n   confirmationDisplayed,\n  });","const searchReducer = (state = '', action) => {\n    switch (action.type) {\n        case 'ADD_SEARCH':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default searchReducer;","export const FOLLOW_UP_ACTIONS = {\n  FETCH_ALL_PENDING_FOLLOWUP: 'FETCH_ALL_PENDING_FOLLOWUP',\n  FETCH_EMPLOYEE_PENDING_FOLLOWUP: 'FETCH_EMPLOYEE_PENDING_FOLLOWUP',\n  ADD_FOLLOWUP: 'ADD_FOLLOWUP',\n  FOLLOWUP_POST_SUCCESS: 'FOLLOWUP_POST_SUCCESS',\n  FOLLOWUP_POST_ERROR: 'FOLLOWUP_POST_ERROR',\n  COMPLETE_FOLLOWUP: 'COMPLETE_FOLLOWUP',\n  SET_ALL_PENDING_FOLLOWUP: 'SET_ALL_PENDING_FOLLOWUP',\n  SET_EMPLOYEE_PENDING_FOLLOWUP: 'SET_EMPLOYEE_PENDING_FOLLOWUP',\n};","import { combineReducers } from 'redux';\nimport { FOLLOW_UP_ACTIONS } from '../actions/followupActions';\nimport { FEEDBACK_ACTIONS } from '../actions/feedbackActions';\n\nconst newPostedFollowup = (state = null, action) => {\n  if (action.type === FOLLOW_UP_ACTIONS.FOLLOWUP_POST_SUCCESS) {\n    return action.payload;\n  } else if (action.type === FEEDBACK_ACTIONS.FEEDBACK_CONFIRMATION_ACKWNOLEDGED) {\n    return null;\n  } else {\n    return state;\n  }\n};\n\nexport default combineReducers({\n  newPostedFollowup,\n});","const initialState = {\n    column: '',\n    direction: ''\n}\n\nconst sortReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'ADD_COLUMN_TO_SORT':\n            return { ...state, column: action.payload };\n        case 'ADD_SORT_DIRECTION':\n            return { ...state, direction: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default sortReducer;","const idReducer = (state = '', action) => {\n    switch (action.type) {\n        case 'EMPLOYEE_TO_VIEW':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default idReducer;","export const QUALITY_ACTIONS = {\n  FETCH_FEEDBACK_QUALITY_CATEGORIES: 'FETCH_FEEDBACK_QUALITY_CATEGORIES',\n  SET_FEEDBACK_QUALITY_CATEGORIES: 'SET_FEEDBACK_QUALITY_CATEGORIES'\n};","import { QUALITY_ACTIONS } from '../actions/qualityActions';\n\nconst quality_types = (state = [], action) => {\n  if (action.type === QUALITY_ACTIONS.SET_FEEDBACK_QUALITY_CATEGORIES) {\n    return action.payload;\n  } else {\n    return state;\n  }\n};\n\nexport default quality_types;","const navReducer = (state = '', action) => {\n    switch (action.type) {\n        case 'ADD_NAV_VALUE':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default navReducer;","import { combineReducers } from 'redux';\nimport user from './userReducer';\nimport login from './loginReducer';\nimport people from './peopleReducer';\nimport feedback from './feedbackReducer';\nimport search from './searchReducer';\nimport followup from './followupReducer';\nimport sort from './sortReducer';\nimport id from './idReducer';\nimport quality_types from './qualityReducer';\nimport nav from './navReducer';\n\n\n//Lets make a bigger object for our store, with the objects from our reducers.\n//This is why we get this.props.reduxStore.user.isLoading\nconst store = combineReducers({\n  user,\n  login,\n  people,\n  feedback,\n  search,\n  sort,\n  followup,\n  sort,\n  id,\n  quality_types,\n  nav,\n});\n\nexport default store;\n","import React from 'react';\n\nimport { Grid } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  content: {\n    backgroundColor: 'white',\n    [theme.breakpoints.down('sm')]: {\n      height: '100vh'\n    },\n    [theme.breakpoints.up('md')]: {\n      height: '80vh'\n    },\n  }\n});\n\nclass GridContainer extends React.Component {\n  render() {\n    const {classes} = this.props;\n    return (\n      <Grid container spacing={0}>\n        <Grid item xs={false} md={12} style={{height: '10vh'}}></Grid>\n        <Grid item xs={false} md={1}></Grid>\n        <Grid className={classes.content} item xs={12} md={10}>\n          {this.props.children}\n        </Grid>\n        <Grid item xs={false} md={1}></Grid>\n        <Grid item xs={false} md={12} style={{height: '10vh'}}></Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(GridContainer); ","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { triggerLogin, formError, clearError } from '../../redux/actions/loginActions';\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport {Button, FormLabel, Input} from '@material-ui/core';\n\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  login: state.login,\n});\n\nconst styles = {\n  button: {\n      margin: 5,\n      width: 30,\n  },\n}\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n  componentDidMount() {\n    // starts request for server to check that we are logged in\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    this.props.dispatch(clearError());\n  }\n  componentDidUpdate() {\n    // if we have a response from the server and the user is logged in, redirect to the /user URL\n    if (!this.props.user.isLoading && this.props.user.userName !== null) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  login = (event) => {\n    event.preventDefault();\n    console.log('logging in')\n    if (this.state.username === '' || this.state.password === '') {\n      this.props.dispatch(formError());\n    } else {\n      console.log('in the else statement')\n      this.props.dispatch(triggerLogin(this.state.username, this.state.password));\n    }\n  }\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n  renderAlert() {\n    if (this.props.login.message !== '') {\n      return (\n        <h2\n          className=\"alert\"\n          role=\"alert\"\n        >\n          {this.props.login.message}\n        </h2>\n      );\n    }\n    return (<span />);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderAlert()}\n        <form onSubmit={this.login}>\n          <h1>odissii</h1>\n          <div>\n            <FormLabel  htmlFor=\"username\">\n              Username:\n              <Input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </FormLabel>\n          </div>\n          <div>\n            <FormLabel htmlFor=\"password\">\n              Password:\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </FormLabel >\n          </div>\n          <div className=\"align-right\">\n          <Button onClick={()=>this.props.history.push('/reset/password')}>Forgot Password?</Button>\n            <Button style={styles.button} type={'submit'} variant=\"contained\" color=\"primary\">Login</Button>\n          </div>\n        </form>\n            \n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ROLES = [\n  {\n    id: 1,\n    name: 'supervisor',\n  },\n  {\n    id: 2,\n    name: 'manager'\n  }\n];\n\nclass RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      employeeId: '',\n      first_name: '',\n      last_name: '',\n      email_address: '',\n      role_id: '',\n      message: '',\n    };\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username === '' || this.state.password === '') {\n      this.setState({\n        message: 'Choose a username and password!',\n      });\n    } else {\n      \n      const {\n        username, \n        password, \n        employeeId, \n        first_name, \n        last_name, \n        email_address, \n        role_id\n      } = this.state;\n\n      const body = {\n        username, \n        password, \n        employeeId, \n        first_name, \n        last_name, \n        email_address, \n        role_id\n      };\n\n      // making the request to the server to post the new user's registration\n      axios.post('/api/user/register/', body)\n        .then((response) => {\n          if (response.status === 201) {\n            this.props.history.push('/home');\n          } else {\n            this.setState({\n              message: 'Ooops! That didn\\'t work. The username might already be taken. Try again!',\n            });\n          }\n        })\n        .catch(() => {\n          this.setState({\n            message: 'Ooops! Something went wrong! Is the server running?',\n          });\n        });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  renderAlert() {\n    if (this.state.message !== '') {\n      return (\n        <h2\n          className=\"alert\"\n          role=\"alert\"\n        >\n          {this.state.message}\n        </h2>\n      );\n    }\n    return (<span />);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderAlert()}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"employeeId\">\n            Employee Id:\n              <input\n                type=\"text\"\n                name=\"employeeId\"\n                value={this.state.employeeId}\n                onChange={this.handleInputChangeFor('employeeId')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"first_name\">\n            First Name:\n              <input\n                type=\"text\"\n                name=\"first_name\"\n                value={this.state.first_name}\n                onChange={this.handleInputChangeFor('first_name')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"last_name\">\n            Last Name:\n              <input\n                type=\"text\"\n                name=\"last_name\"\n                value={this.state.last_name}\n                onChange={this.handleInputChangeFor('last_name')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"email_address\">\n            Email Address:\n              <input\n                type=\"email\"\n                name=\"email_address\"\n                value={this.state.email_address}\n                onChange={this.handleInputChangeFor('email_address')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"role_id\">\n              <select value={this.state.role_id} onChange={this.handleInputChangeFor('role_id')}>\n                <option value=\"\" disabled>Select user type</option>\n                {ROLES.map(role => (\n                  <option key={role.id} value={role.id}>{role.name}</option>\n                ))}\n              </select>\n            </label>\n          </div>\n          <div>\n            <input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n            <Link to=\"/home\">Cancel</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterPage;\n\n","export const USER_ROLES = {\n  SUPERVISOR: 'supervisor',\n  MANAGER: 'manager'\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { USER_ROLES } from '../../constants';\nimport { triggerLogout } from '../../redux/actions/loginActions';\nimport { BottomNavigation, BottomNavigationAction, Button, Grid } from '@material-ui/core';\nimport Group from '@material-ui/icons/Group';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport Create from '@material-ui/icons/Create';\nimport ShowChart from '@material-ui/icons/ShowChart';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  nav: state.nav,\n})\n\nconst styles = {\n  stickToBottom: {\n    width: '100%',\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n  },\n};\n\nclass Nav extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n  }\n\n  handleChange = (event, value) => {\n    this.props.dispatch({ type: 'ADD_NAV_VALUE', payload: value });\n  }\n\n  // logs user out on click of the button within the navbar\n  logout = () => {\n    this.props.dispatch(triggerLogout());\n    console.log('in logout click');\n  }\n\n  render() {\n    let content = null;\n\n    // if manager logged in, will render appropriate nav bar\n    if (this.props.user && this.props.user.role === USER_ROLES.MANAGER) {\n      content = (\n        <BottomNavigation value={this.props.nav} style={styles.stickToBottom} onChange={this.handleChange}>\n          <BottomNavigationAction className=\"nav\" label=\"Dashboard\" value=\"dashboard\" icon={<ShowChart />} component={Link} to={\"/dashboard\"} />\n          <BottomNavigationAction className=\"nav\" label=\"Employeees\" value=\"employees\" icon={<Group />} component={Link} to={\"/allEmployees\"} />\n          <BottomNavigationAction className=\"nav\" label=\"Add Staff\" value=\"staff\" icon={<PersonAdd />} component={Link} to={\"/addperson\"} />\n          <BottomNavigationAction className=\"nav\" icon={<Button>Logout</Button>} onClick={this.logout} />\n        </BottomNavigation>\n      )\n      // if supervisor logged in, will render appropriate nav bar\n    } else if (this.props.user && this.props.user.role === USER_ROLES.SUPERVISOR) {\n      content = (\n        <BottomNavigation value={this.props.nav} style={styles.stickToBottom} onChange={this.handleChange}>\n          <BottomNavigationAction className=\"nav\" label=\"Dashboard\" value=\"dashboard\" icon={<ShowChart />} component={Link} to={\"/dashboard\"} />\n          <BottomNavigationAction className=\"nav\" label=\"Employees\" value=\"employees\" icon={<Group />} component={Link} to={\"/employees\"} />\n          <BottomNavigationAction className=\"nav\" label=\"Feedback\" value=\"feedback\" icon={<Create />} component={Link} to={\"/feedback/new\"} />\n          <BottomNavigationAction className=\"nav\" icon={<Button>Logout</Button>} onClick={this.logout} />\n        </BottomNavigation>\n      )\n    }\n    return (\n      <Grid>\n        {content}\n      </Grid>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { QUALITY_ACTIONS } from '../../../../redux/actions/qualityActions';\nimport { Bar } from 'react-chartjs-2';\n\nconst barOptions = {\n  scales: {\n    xAxes: [{\n        stacked: true\n    }],\n    yAxes: [{\n        stacked: true\n    }]\n  }, \n};\n\nconst mapStateToProps = state => ({\n  quality_types: state.quality_types\n});\n\nclass PastTwelveMonths extends React.Component {\n  componentDidMount() {\n    if (!this.props.quality_types.length) {\n      this.props.dispatch({type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES});\n    }\n  }\n\n  render() {\n    const { quality_types, data } = this.props;\n    if (!(quality_types.length && data.length)) return null;\n\n    const monthlyTotals = totalsByMonth(data, quality_types);\n\n    const graphData = {\n      labels: getNamesOfPastTwelveMonths(),\n      datasets: [\n        {\n          label: 'Correct',\n          backgroundColor: '#F79B1B',\n          data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'correct'))\n        },\n        {\n          label: 'Instruct',\n          backgroundColor: '#6C9BD1',\n          data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'instruct'))\n        },\n        {\n          label: 'Praise',\n          backgroundColor: '#4AC985',\n          data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'praise'))\n        },\n      ]\n    }\n\n\n    return <Bar data={graphData} options={barOptions} />;\n  }\n}\n\nexport default connect(mapStateToProps)(PastTwelveMonths);\n\nconst getIdForQuality = (types, name) => types.find(type => type.name === name).id;\n\nconst getNamesOfPastTwelveMonths = () => {\n  const names = [];\n  for (let i = 12; i > 0; i--) {\n    names.push(moment().subtract(i, 'months').format('MMM'));\n  }\n  return names;\n}\n\nconst qualityByMonth = (totals, qualityId) => Object.values(totals).map(month => month[qualityId]);\n\nconst totalsByMonth = (feedback, quality_types) => {\n  const months = [12,11,10,9,8,7,6,5,4,3,2,1];\n  const feedbackByMonth = months.map(sortFeedbackByMonth(feedback));\n\n  return feedbackByMonth.map(feedback => getQualityTotalsForMonth(feedback, quality_types));\n};\n\nconst sortFeedbackByMonth = feedback => monthNumber => {\n  const monthStart = moment().subtract(monthNumber, 'months').startOf('month');\n  const monthEnd = moment().subtract(monthNumber, 'months').endOf('month');\n\n  return feedback.filter(entry => {\n    const entryDate = moment(entry.date_created);\n    return entryDate >= monthStart && entryDate <= monthEnd;\n  });\n};\n\nconst getQualityTotalsForMonth = (feedbackForMonth, quality_types) => {\n  const blankMonthlySummary = quality_types.reduce((summary, quality) => {\n    summary[quality.id] = 0;\n    return summary;\n  }, {});\n\n  return feedbackForMonth.reduce((summary, entry) => {\n    summary[entry.quality_id] += 1;\n    return summary;\n  }, {...blankMonthlySummary});\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { QUALITY_ACTIONS } from '../../../../redux/actions/qualityActions';\nimport moment from 'moment';\nimport { Doughnut } from 'react-chartjs-2';\n\nconst mapStateToProps = state => ({\n  quality_types: state.quality_types\n});\n\n// REACT COMPONENT\nclass QuarterlySummary extends React.Component {\n  componentDidMount() {\n    if (!this.props.quality_types.length) {\n      this.props.dispatch({type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES});\n    }\n  }\n  \n  render() {\n    if (!this.props.quality_types.length) return null;\n    \n    return (\n      <Doughnut data={\n          {\n            labels: ['Praise', 'Instruct', 'Correct'],\n            datasets: [{\n              data: feedbackQualityForCurrentQuarter(this.props.data, this.props.quality_types),\n              backgroundColor: ['#4AC985', '#6C9BD1', '#F79B1B']\n            }]\n          }\n        }\n      />\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(QuarterlySummary);\n\n// reduces the feedback down into an array with three numbers,\n// representing the amount of praise, instruct, or correct\n// for the current quarter\nconst feedbackQualityForCurrentQuarter = (feedback, quality_types) => {\n  const currentQuarter = moment().quarter();\n  // const startOfQuarter = getStartingMonthOfCurrentQuarter(currentMonth);\n\n  const quality = feedback.reduce((summary, entry) => {\n    if (moment(entry.date_created).quarter() === currentQuarter) {\n      summary[quality_types.find(type => type.id === entry.quality_id).name] += 1;\n    }\n    return summary;\n  }, {\n    praise: 0,\n    instruct: 0,\n    correct: 0\n  });\n\n  return Object.values(quality);\n};","import React from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { QUALITY_ACTIONS } from '../../../../redux/actions/qualityActions';\nimport { Bar } from 'react-chartjs-2';\n\nconst barOptions = {\n  scales: {\n    xAxes: [{\n        stacked: true\n    }],\n    yAxes: [{\n        stacked: true\n    }]\n  }, \n};\n\nconst mapStateToProps = state => ({\n  quality_types: state.quality_types\n});\n\nclass PastThreeWeeks extends React.Component {\n  componentDidMount() {\n    if (!this.props.quality_types.length) {\n      this.props.dispatch({type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES});\n    }\n  }\n\n  render() {\n    const { quality_types, data } = this.props;\n\n    if (!(quality_types.length && data.length)) return null;\n\n    // console.log('quality types:', quality_types);\n    const weekNames = namesOfPastThreeWeeks();\n    const threeWeeksFeedback = data.filter(lastThreeWeeksOnly);\n    const weeklyQualityTotals = totalsByWeek(threeWeeksFeedback, quality_types);\n\n    const graphData = {\n      labels: weekNames,\n      datasets: [\n        {\n          label: 'Correct',\n          backgroundColor: '#F79B1B',\n          data: qualityByWeek(weeklyQualityTotals, getIdForQuality(quality_types, 'correct'))\n        },\n        {\n          label: 'Instruct',\n          backgroundColor: '#6C9BD1',\n          data: qualityByWeek(weeklyQualityTotals, getIdForQuality(quality_types, 'instruct'))\n        },\n        {\n          label: 'Praise',\n          backgroundColor: '#4AC985',\n          data: qualityByWeek(weeklyQualityTotals, getIdForQuality(quality_types, 'praise'))\n        },\n      ]\n    };\n\n    return <Bar data={graphData} options={barOptions} />;\n  }\n}\n\nexport default connect(mapStateToProps)(PastThreeWeeks);\n\n\nconst lastThreeWeeksOnly = feedback => moment(feedback.date_created).isSameOrAfter(moment().subtract(3, 'weeks').startOf('isoWeek'));\n\nconst getIdForQuality = (types, name) => types.find(type => type.name === name).id;\n\n// for each week for the past three whole weeks, get the sums of each quality type given \nconst totalsByWeek = (feedback, quality_types) => {\n  const weekThreeStart = moment().subtract(3, 'weeks').startOf('isoWeek');\n  const weekTwoStart = moment().subtract(2, 'weeks').startOf('isoWeek');\n  const weekOneStart = moment().subtract(1, 'weeks').startOf('isoWeek');\n  const thisWeekStart = moment().startOf('isoWeek');\n\n  const blankSummary = quality_types.reduce((summary, quality) => {\n    summary[quality.id] = 0;\n    return summary;\n  }, {});\n\n  return feedback.reduce((summary, entry) => {\n    const date = moment(entry.date_created);    \n    if (date.isBetween(weekThreeStart, weekTwoStart, 'days', '[]')) {\n      summary.threeWeeksAgo[entry.quality_id] += 1;\n    } else if (date.isBetween(weekTwoStart, weekOneStart, 'days', '[]')) {\n      summary.twoWeeksAgo[entry.quality_id] += 1;\n    } else if (date.isBetween(weekOneStart, thisWeekStart, 'days', '[]')) {\n      summary.oneWeekAgo[entry.quality_id] += 1;\n    }\n\n    return summary;\n  }, ({\n    threeWeeksAgo: {...blankSummary},\n    twoWeeksAgo: {...blankSummary},\n    oneWeekAgo: {...blankSummary},\n  }));\n};\n\n// get the names of the past three whole weeks from now, ie: \"Oct 12\"\nconst namesOfPastThreeWeeks = () => ([\n  moment().subtract(3, 'weeks').startOf('isoWeek').format('MMM DD'),\n  moment().subtract(2, 'weeks').startOf('isoWeek').format('MMM DD'),\n  moment().subtract(1, 'weeks').startOf('isoWeek').format('MMM DD'),\n]);\n\n// get the tally objects for each week and return an array with only the values for a specific quality\nconst qualityByWeek = (totals, qualityId) => Object.values(totals).map(week => week[qualityId]);\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import { USER_ACTIONS } from '../../../redux/actions/userActions';\n\nimport { Grid, Typography } from '@material-ui/core'; \nimport { FEEDBACK_ACTIONS } from '../../../redux/actions/feedbackActions';\n\nimport PastTwelveMonths from './Graphs/PastTwelveMonths';\nimport QuarterlySummary from './Graphs/QuarterlySummary';\nimport PastThreeWeeks from './Graphs/PastThreeWeeks';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  feedbackHistory: state.feedback.feedback.allFeedbackBySupervisor,\n});\n\nclass SupervisorDashboard extends React.Component {\n  componentDidMount() {\n    this.props.dispatch({\n      type: FEEDBACK_ACTIONS.FETCH_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR\n    });\n  }\n\n  render(){\n    const { feedbackHistory } = this.props;\n    return (\n      <div className=\"padding-bottom\">\n        <Grid container spacing={0}>\n          <Grid item xs={12}>\n            <Typography variant=\"display1\" className=\"center\">{this.props.user.first_name}'s Dashboard</Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subheading\" className=\"center\">Feedback given in the past quarter</Typography>\n            <QuarterlySummary data={feedbackHistory} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subheading\" className=\"center\">Feedback given in the past three weeks</Typography>\n            <PastThreeWeeks data={feedbackHistory} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subheading\" className=\"center\">Feedback given in the past twelve months</Typography>\n            <PastTwelveMonths data={feedbackHistory} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(SupervisorDashboard);","import React, {Component} from 'react';\nimport { Doughnut } from 'react-chartjs-2';\n\n const options = {\n     responsive: true\n }\nclass IndividualManagerGraph extends Component {\n    render(){\n        let supervisorSummary = {\n            labels: ['Praise', 'Instruct', 'Correct'],\n            datasets: [{\n            data: [this.props.feedback.praise, this.props.feedback.instruct, this.props.feedback.correct],\n            backgroundColor: ['#4AC985', '#6C9BD1', '#F79B1B'],\n            }]\n        };\n        return(\n             <Doughnut data={supervisorSummary} options={options}/>\n        );\n    }\n}\nexport default IndividualManagerGraph; ","import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\n\nconst barOptions = {\n    scales: {\n        xAxes: [{\n            stacked: true\n        }],\n        yAxes: [{\n            stacked: true\n        }]\n    },\n};\n\nclass ManagerOverviewGraph extends Component {\n    render() {\n        let managerOverview = {\n            labels: this.props.supervisors,\n            datasets: [\n                {\n                    label: 'Praise',\n                    backgroundColor: '#4AC985',\n                    data: this.props.praise\n                },\n                {\n                    label: 'Instruct',\n                    // backgroundColor: '#6F97C4',\n                    backgroundColor: '#6C9BD1',\n                    data: this.props.instruct\n                },\n                {\n                    label: 'Correct',\n                    backgroundColor: '#F79B1B',\n                    data: this.props.correct\n                },\n            ]\n        }\n        return (\n            <div>\n                <Bar data={managerOverview} options={barOptions} />\n            </div>\n        );\n    }\n}\nexport default ManagerOverviewGraph; ","import React from 'react';\nimport { Grid, IconButton, Button, Typography } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport IndividualManagerGraph from './Graphs/IndividualManagerGraph';\nimport ManagerOverviewGraph from './Graphs/ManagerOverviewGraph';\nimport { connect } from 'react-redux';\nimport { USER_ACTIONS } from '../../../redux/actions/userActions';\nimport { PEOPLE_ACTIONS } from '../../../redux/actions/peopleActions';\nimport axios from 'axios';\nimport { CSVLink } from 'react-csv';\nimport moment from 'moment';\nimport './ManagerDashboard.css';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  people: state.people,\n});\nclass ManagerDashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supervisors: [],\n      praise: [],\n      correct: [],\n      instruct: [],\n      labels: [],\n      reports: {},\n      feedbackCounts: {},\n    }\n  }\n  componentWillMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    this.getSupervisors();\n  } // end componentDidMount\n\n  //navigates to a view where the Manager can edit a Supervisor's profile \n  editPerson = (id) => {\n    this.props.history.push(`/edit/supervisor/${id}`);\n  }// end editPerson\n\n   // gets a list of all of the supervisors that are overseen by the logged in user (Manager)\n  getSupervisors = () => {\n    axios({\n      method: 'GET',\n      url: '/api/staff/supervisors'\n    }).then((response) => {\n      // set the supervisors to redux and sortSupervisors(), which filters the response.data to be more usable  \n      this.props.dispatch({ type: PEOPLE_ACTIONS.SET_SUPERVISORS, payload: response.data });\n      this.sortSupervisors(response.data);\n    }).catch((error) => {\n      console.log('Error getting supervisors', error);\n    })\n  }// end getSupervisors\n\n  //this gets the past twelve months of feedback counting how many praise, instruct, and correct feedback each supervisor has given \n  //takes in an array of supervisors's IDs to get the counts for each supervisor that exists.\n  getFeedback = (idArray) => {\n    let today = new Date();\n    let end = moment(today).format('L');\n    let start = moment(today).subtract(1, 'year').format('L');\n    for (let i = 0; i < idArray.length; i++) {\n      axios({\n        method: 'GET',\n        url: `/api/feedback/supervisors/count?id=${idArray[i]}&start=${start}&end=${end}`\n      }).then((response) => {\n        let feedback = response.data[0];\n        //if feedback exists, add it to the supervisor array on state, which already contains a list of supervisors and counts of praise, instruct, and correct (each starting at 0)\n        if(feedback !== undefined){\n          //find the index of the supervisors array where the supervisor ID matches the response from the server \n            let index = this.state.supervisors.findIndex(supervisor => supervisor.supervisor_id === feedback.sid);\n            let supervisorFeedback = this.state.supervisors;\n            //insert the response.data into the supervisors array at the index discovered above then reset the value of state to include these values \n            supervisorFeedback[index] = { ...supervisorFeedback[index], praise: parseInt(feedback.praise), instruct: parseInt(feedback.instruct), correct: parseInt(feedback.correct) };\n            this.setState({\n              supervisors: supervisorFeedback\n            })\n        }\n        // run sortData() to count all praise, instruct, and correct feedback records for all supervisors, to be used in the Manager Overview graph \n        this.sortData();\n      }).catch((error) => {\n        console.log('Error getting feedback counts', error);\n      })\n    }\n  }\n  //this gets more detailed reports about each feedback given by a supervisor, breaking each record down into employee, the details given, and the quality of the feedback\n  //this data is used in a CSV file which can be downloaded by a manager \n  getFeedbackDetails = (idArray) => {\n    let today = new Date();\n    let end = moment(today).format('L');\n    let start = moment(today).subtract(1, 'year').format('L');\n    idArray.map(id => axios({\n      method: 'GET',\n      url: `/api/feedback/supervisors/reports?id=${id}&start=${start}&end=${end}`\n    }).then((response) => {\n      this.setState({\n        reports: {\n          ...this.state.reports,\n          [id]: response.data\n        }\n      })\n    }).catch((error) => {\n      console.log('Error getting feedback details', error);\n    }))\n  }\n  navTo = (id) => {\n    //clears feedback in redux to prevent duplicate information when navigating back and forth to this page \n    this.props.dispatch({ type: 'CLEAR_FEEDBACK' });\n    //navigates to the supervisor edit page\n    this.props.history.push(`/view/supervisor/${id}`);\n  }\n  //sends the ID of a supervisor to redux and then navigates the Manager to the \"Employees\" page. Upon that page load, the id is retrieved from redux and used to populate that view with a list of all of that supervisor's employees. \n  navToEmployees = (id) => {\n    this.props.dispatch({ type: 'SET_SUPERVISOR_TO_VIEW', payload: { id: id } });\n    this.props.history.push(`/employees/`);\n  }\n  // processes an array of supervisors in three ways: \n  //1. alphabetizes all supervisors and places the results into an object, starting all praise/instruct/correct counts at 0. supervisors array is used to create the cards displaying on the DOM for each supervisor\n  //2. creates a labels array which is used to label the manager overview bar chart \n  //3. creates an ID array which contains the ID of each supervisor. This is used to make axios requests for detailed feedback counts for each supervisor. \n  sortSupervisors = (array) => {\n    let supervisors = [];\n    let IDs = [];\n    let labels = []\n    for (let i = 0; i < array.length; i++) {\n      supervisors.push({ first_name: array[i].first_name, last_name: array[i].last_name, supervisor_id: array[i].supervisor_id, praise: 0, instruct: 0, correct: 0 });\n      IDs.push(array[i].supervisor_id);\n      labels.push(array[i].last_name + ', ' + array[i].first_name);\n    }\n    this.setState({\n      ...this.state,\n      supervisors: supervisors,\n      labels: labels\n    });\n    //calls two functions to get counts of feedback and full feedback details for each supervisor \n    this.getFeedback(IDs);\n    this.getFeedbackDetails(IDs);\n  }\n  // maps through supervisors array in state, extracts the count of praise, instructive, and corrective feedback, and stores each category in an array. \n  // these arrays are used to create the manager overview graph \n  sortData = () => {\n    let praise = this.state.supervisors.map(supervisor => supervisor.praise);\n    let instruct = this.state.supervisors.map(supervisor => supervisor.instruct);\n    let correct = this.state.supervisors.map(supervisor => supervisor.correct);\n      this.setState({\n        praise: praise,\n        correct: correct,\n        instruct: instruct,\n      });\n    }\n  render() {\n    return (\n      <div className=\"padding-bottom\">\n        <Grid container spacing={0} >\n          <Grid item xs={12}>\n            <Typography variant=\"display1\" className=\"center\">{this.props.user.first_name}'s Dashboard</Typography>\n            <Typography variant=\"subheading\" className=\"center\">Feedback given past 12 months</Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <ManagerOverviewGraph supervisors={this.state.labels} praise={this.state.praise} correct={this.state.correct} instruct={this.state.instruct} />\n          </Grid>\n          <Grid item xs={12}>\n            <br />\n            <Typography variant=\"headline\" className=\"center\">All Supervisors</Typography>\n            <br />\n          </Grid>\n            <div className=\"card-container\">\n          {this.state.supervisors.map((supervisor, i) => {\n            return (\n                  <div className=\"card\" key={i}>\n                    <Typography variant=\"headline\">{supervisor.first_name} {supervisor.last_name} <IconButton onClick={() => this.editPerson(supervisor.supervisor_id)}><Edit /></IconButton></Typography>\n                    <Button color=\"primary\" onClick={() => this.navTo(supervisor.supervisor_id)}>Summary</Button>\n                    <Button color=\"primary\" onClick={() => this.navToEmployees(supervisor.supervisor_id)}>Employees</Button>\n                    <Typography>Feedback given past 12 months</Typography>\n                    <IndividualManagerGraph feedback={supervisor} />\n                    {this.state.reports[supervisor.supervisor_id] && <CSVLink data={this.state.reports[supervisor.supervisor_id]}\n                      filename={`${supervisor.last_name}-feedback.csv`}\n                      target=\"_blank\"\n                    >Download CSV</CSVLink>}\n                  </div>\n                );\n              })}\n            </div>\n        </Grid>\n     </div>\n    );\n  }\n}\nexport default connect(mapStateToProps)(ManagerDashboard);","import React from 'react';\nimport { connect } from 'react-redux';\n// import AppBar from './AppBar/AppBar'\nimport Nav from '../../components/Nav/Nav';\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport SupervisorDashboard from './SupervisorDashboard/SupervisorDashboard';\nimport ManagerDashboard from './ManagerDashboard/ManagerDashboard';\nimport { USER_ROLES } from '../../constants';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nclass DashboardView extends React.Component {\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n  }\n\n  componentDidUpdate() {\n    if (!this.props.user.isLoading && this.props.user.userName === null) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render(){\n    const {user} = this.props;\n    \n    let userDashboard;\n    if (user.role === USER_ROLES.SUPERVISOR) {\n      userDashboard = <SupervisorDashboard history={this.props.history}/>\n    } else if (user.role === USER_ROLES.MANAGER) {\n      userDashboard = <ManagerDashboard history={this.props.history}/>\n    }\n\n    return (\n      <div>\n          {userDashboard}\n        <Nav/>\n      </div>\n      \n    )\n  }\n}\n\nexport default connect(mapStateToProps)(DashboardView);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, IconButton, InputBase } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Search from '@material-ui/icons/Search';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nconst styles = {\n    grow: {\n        flexGrow: 1,\n    },\n    input: {\n        width: 100,\n    },\n    color: {\n        color: '#f7fcff',\n    }\n}\n\nclass EmployeeAppBar extends React.Component {\n     // This updates redux with the search paramiters\n    handleChange = (event) => {\n        this.props.dispatch({ type: 'ADD_SEARCH', payload: event.target.value });\n    }\n\n    // When the back button is clicked the user is sent back to the dashboard view\n    handleClick = (event) => {\n        this.props.history.push('/dashboard');\n        this.props.dispatch({ type: 'ADD_NAV_VALUE', payload: 'dashboard'});\n    }\n    \n    render() {\n        return (\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton onClick={this.handleClick}><ArrowBack  style={styles.color}/></IconButton>\n                    <h3>All Employees</h3>\n                    <div style={styles.grow} />\n                    <div>\n                        <Search />\n                        <InputBase\n                            style={styles.input}\n                            placeholder=\"Search...\"\n                            onChange={this.handleChange} />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(EmployeeAppBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Grid, Avatar, Button, Table, TableHead, TableCell, TableBody, TableRow } from '@material-ui/core';\nimport { USER_ROLES } from '../../../constants';\nimport { PEOPLE_ACTIONS } from '../../../redux/actions/peopleActions';\nimport Edit from '@material-ui/icons/Edit';\nimport ArrowDropUp from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport orderBy from 'lodash/orderBy';\n\nconst moment = require('moment');\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    people: state.people.staff.allEmployees,\n    employees: state.people.staff.supervisorEmployees,\n    search: state.search,\n    filter: state.filter,\n    sort: state.sort,\n})\n\nconst styles = {\n    table: {\n        marginTop: 5,\n        paddingBottom: '30vh',\n        backgroundColor: 'white',\n    },\n    tableCell: {\n        padding: 0,\n        textAlign: 'center',\n    },\n    grid: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    gridRow: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        marginRight: '10px',\n        marginLeft: '10px',\n    }\n}\n\nconst invertDirection = {\n    asc: 'desc',\n    desc: 'asc'\n}\n\nclass AllEmployeeList extends React.Component {\n    // Gets all the employees within the company\n    // initially orders the employees ascending by last name\n    componentDidMount() {\n        this.getEmployees();\n        orderBy(this.props.people, this.props.sort.column, this.props.sort.direction);\n    }\n\n    // activates the fetchAllEmployees function within the employeeSaga \n    getEmployees = () => {\n        this.props.dispatch({ type: PEOPLE_ACTIONS.FETCH_ALL_EMPLOYEES });\n    }\n    // Updates redux with the column and direction to sort the information\n    handleSort = columnName => {\n        this.props.dispatch({ type: 'ADD_COLUMN_TO_SORT', payload: columnName });\n        let direction = this.props.sort.column === columnName ? invertDirection[this.props.sort.direction] : 'desc';\n        this.props.dispatch({ type: 'ADD_SORT_DIRECTION', payload: direction });\n    }\n\n    // When the edit button is clicked the user is redirected to the edit employee view associated with the employee id\n    handleClick = (id) => {\n        this.props.history.push(`/edit/employee/${id}`);\n    }\n\n    render() {\n        let content = null;\n        // uses lodash orderBy function to sort the data based on column and direction\n        let data = orderBy(this.props.people, this.props.sort.column, this.props.sort.direction);\n        // Conditionally renders content only if the user's role is 'manager'\n        if (this.props.user.role === USER_ROLES.MANAGER) {\n            // filters the data based on the search paramiter entered in the search bar in the appbar\n            let filteredEmployees = data.filter(\n                (employee) => {\n                    // toLowerCase removes case sensitivity from the search bar\n                    return employee.first_name.toLowerCase().indexOf(this.props.search.toLowerCase()) !== -1 ||\n                        employee.last_name.toLowerCase().indexOf(this.props.search.toLowerCase()) !== -1;\n                }\n            )\n            content = (\n                <Table style={styles.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell style={styles.tableCell}\n                                onClick={() => this.handleSort('last_name')}>\n                                {/* Renders column name and conditionally renders arrow to indicate sorting direction */}\n                                <Grid style={styles.grid}>Employee Name{this.props.sort.column === 'last_name' ? (\n                                    this.props.sort.direction === 'asc' ? (\n                                        <ArrowDropUp />) : (<ArrowDropDown />)) : null}</Grid></TableCell>\n                            <TableCell style={styles.tableCell}\n                                onClick={() => this.handleSort('recent')}>\n                                {/* Renders column name and conditionally renders arrow to indicate sorting direction */}\n                                <Grid style={styles.grid}>Last&nbsp;Feedback{this.props.sort.column === 'recent' ? (\n                                    this.props.sort.direction === 'asc' ? (\n                                        <ArrowDropUp />) : (<ArrowDropDown />)) : null}</Grid></TableCell>\n                            <TableCell style={styles.tableCell}>Edit</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {filteredEmployees.map((employee) => {\n                            return <TableRow key={employee.id} value={employee}>\n                                <TableCell style={styles.tableCell}>\n                                    <Grid style={styles.gridRow}>\n                                        {/* Conditionally renders image from database or placeholder avatar image found in images folder */}\n                                        <Avatar style={styles.avatar} alt={employee.first_name}\n                                            src={employee.image_path || 'images/avatar.png'} />\n                                        {employee.first_name}&nbsp;{employee.last_name}</Grid>\n                                </TableCell>\n                                <TableCell style={styles.tableCell}>\n                                    {/* Renders most recent feedback data and does not render anything if there has not been a feedback yet */}\n                                    {employee.recent && moment(employee.recent).format(\"MM/DD/YYYY\")}\n                                </TableCell>\n                                <TableCell style={styles.tableCell}>\n                                    <Button onClick={() => this.handleClick(employee.id)}>\n                                        <Edit />\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        })}\n                    </TableBody>\n                </Table>\n            );\n        }\n        return (\n            <Grid>\n                {content}\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AllEmployeeList));","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport AllEmployeeAppBar from './EmployeeAppBar/AllEmployeeAppBar';\nimport AllEmployeeList from './EmployeeList/AllEmployeeList';\nimport Nav from '../../components/Nav/Nav';\nimport { Divider, Grid } from '@material-ui/core'\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { USER_ROLES } from '../../constants';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nclass SupervisorEmployees extends React.Component {\n    componentDidMount() {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    }\n\n    // if user is no longer logged in this will send them to the login page\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/home');\n        }\n    }\n\n    render() {\n        let allEmployees;\n\n        // conditional rendering so that only users with a manager role can see this view\n        if (this.props.user.userName && this.props.user.role === USER_ROLES.MANAGER) {\n            allEmployees = (\n                <Grid>\n                    <AllEmployeeAppBar />\n                    <Divider />\n                    <AllEmployeeList />\n                </Grid>\n            )\n        }\n        return (\n            <Grid>\n                {allEmployees}\n                <Nav />\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(SupervisorEmployees));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, IconButton, InputBase } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport Search from '@material-ui/icons/Search';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\n\nconst styles = {\n    grow: {\n        flexGrow: 1,\n    },\n    input: {\n        width: 100,\n    },\n    color: {\n        color: '#f7fcff',\n    }\n}\n\nclass EmployeeAppBar extends React.Component {\n    // This updates redux with the search paramiters\n    handleChange = (event) => {\n        this.props.dispatch({ type: 'ADD_SEARCH', payload: event.target.value });\n    }\n\n    // When the back button is clicked the user is sent back to the dashboard view\n    handleClick = (event) => {\n        this.props.history.push('/dashboard');\n        this.props.dispatch({ type: 'ADD_NAV_VALUE', payload: 'dashboard' });\n    }\n    render() {\n        return (\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton onClick={this.handleClick}><ArrowBack style={styles.color} /></IconButton>\n                    <h3>Employees</h3>\n                    <div style={styles.grow} />\n                    <div>\n                        <Search />\n                        <InputBase\n                            style={styles.input}\n                            placeholder=\"Search...\"\n                            onChange={this.handleChange} />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(EmployeeAppBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { Grid, Avatar, Table, TableHead, TableCell, TableBody, TableRow } from '@material-ui/core';\nimport Announcement from '@material-ui/icons/Announcement';\nimport ArrowDropUp from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport axios from 'axios';\nimport { PEOPLE_ACTIONS } from '../../../redux/actions/peopleActions';\nimport { USER_ROLES } from '../../../constants';\n\nimport orderBy from 'lodash/orderBy';\n\n\nconst moment = require('moment');\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    employees: state.people.staff.supervisorEmployees,\n    search: state.search,\n    filter: state.filter,\n    sort: state.sort,\n    people: state.people.staff.supervisorToView,\n})\n\nconst styles = {\n    table: {\n        marginTop: 5,\n        paddingBottom: '30vh',\n        backgroundColor: 'white',\n           \n},\n    tableCell: {\n        padding: 0,\n        textAlign: 'center',\n    },\n    grid: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    gridRow: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    avatar: {\n        marginRight: '10px',\n        marginLeft: '10px',\n    }\n}\n\nconst invertDirection = {\n    asc: 'desc',\n    desc: 'asc'\n}\n\nclass EmployeeList extends React.Component {\n    // Gets all the employee's associated the user/supervisor\n    // Initially orders the list of employees ascending by last name\n    componentDidMount() {\n        this.getEmployees();\n        orderBy(this.props.people, this.props.sort.column, this.props.sort.direction);\n    }\n    // Gets all the employees associated with supervisor's id\n    // if a manager is logged in it get's the employee's associated with the supervisor they selected.\n    getEmployees = () => {\n        if (this.props.user.userName && this.props.user.role === USER_ROLES.MANAGER) {\n            const id = this.props.people.id;\n            axios({\n                method: 'GET',\n                url: '/api/staff/employees/' + id\n            }).then((response) => {\n                const employees = response.data;\n                const action = { type: PEOPLE_ACTIONS.SET_SUPERVISOR_EMPLOYEES, payload: employees };\n                this.props.dispatch(action);\n            }).catch((error) => {\n                console.log('Supervisor Employee List get error', error);\n                alert('Unable to GET supervisor employees');\n            })\n        } else if (this.props.user.userName && this.props.user.role === USER_ROLES.SUPERVISOR) {\n            const id = this.props.user.id\n            axios({\n                method: 'GET',\n                url: '/api/staff/employees/' + id\n            }).then((response) => {\n                const employees = response.data;\n                const action = { type: PEOPLE_ACTIONS.SET_SUPERVISOR_EMPLOYEES, payload: employees };\n                this.props.dispatch(action);\n            }).catch((error) => {\n                console.log('Supervisor Employee List get error', error);\n                alert('Unable to GET supervisor employees');\n            })\n        }\n\n    }\n    // Updates redux with the column and direction to sort the information\n    handleSort = columnName => {\n        this.props.dispatch({ type: 'ADD_COLUMN_TO_SORT', payload: columnName });\n        let direction = this.props.sort.column === columnName ? invertDirection[this.props.sort.direction] : 'desc';\n        this.props.dispatch({ type: 'ADD_SORT_DIRECTION', payload: direction });\n    }\n    // When a specific employee is clicked on the user is redirected to summary view for that employee\n    handleClick = (event) => {\n        this.props.dispatch({ type: 'EMPLOYEE_TO_VIEW', payload: event })\n        this.props.history.push('/individualEmployee');\n    }\n\n\n    render() {\n        let content = null;\n        // uses lodash orderBy function to sort the data based on column and direction\n        let data = orderBy(this.props.employees, this.props.sort.column, this.props.sort.direction);\n\n        if (this.props.user.userName) {\n            // filters the data based on the search paramiter entered in the search bar in the appbar\n            let filteredEmployees = data.filter(\n                (employee) => {\n                    // toLowerCase removes case sensitivity from the search bar\n                    return employee.first_name.toLowerCase().indexOf(this.props.search.toLowerCase()) !== -1 ||\n                        employee.last_name.toLowerCase().indexOf(this.props.search.toLowerCase()) !== -1;\n                }\n            )\n            content = (\n                <Table style={styles.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell style={styles.tableCell}\n                                onClick={() => this.handleSort('last_name')}>\n                                {/* Renders column name and conditionally renders arrow to indicate sorting direction */}\n                                <Grid style={styles.grid}>\n                                    Employee Name{this.props.sort.column === 'last_name' ? (\n                                        this.props.sort.direction === 'asc' ? (\n                                            <ArrowDropUp />) : (<ArrowDropDown />)) : null}</Grid></TableCell>\n                            <TableCell style={styles.tableCell}\n                                onClick={() => this.handleSort('recent')}>\n                                <Grid style={styles.grid}>\n                                    {/* Renders column name and conditionally renders arrow to indicate sorting direction */}\n                                    Last&nbsp;Feedback{this.props.sort.column === 'recent' ? (\n                                        this.props.sort.direction === 'asc' ? (\n                                            <ArrowDropUp />) : (<ArrowDropDown />)) : null}</Grid></TableCell>\n                            <TableCell style={styles.tableCell}\n                                onClick={() => this.handleSort('incomplete')}>\n                                <Grid style={styles.grid}>Follow Up{this.props.sort.column === 'followUp' ? (\n                                    this.props.sort.direction === 'asc' ? (\n                                        <ArrowDropUp />) : (<ArrowDropDown />)) : null}</Grid></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {filteredEmployees.map((employee) => {\n                            return <TableRow key={employee.id} value={employee} onClick={() => this.handleClick(employee.id)}>\n                                <TableCell style={styles.tableCell}>\n                                    <Grid style={styles.gridRow}>\n                                        {/* Conditionally renders image from database or placeholder avatar image found in images folder */}\n                                        <Avatar style={styles.avatar} alt={employee.first_name && employee.last_name}\n                                            src={employee.image_path || 'images/avatar.png'} />\n                                        {employee.first_name}&nbsp;{employee.last_name}\n                                    </Grid>\n                                </TableCell>\n                                <TableCell style={styles.tableCell}>\n                                    {/* Renders most recent feedback data and does not render anything if there has not been a feedback yet */}\n                                    {employee.recent && moment(employee.recent).format(\"MM/DD/YYYY\")}\n                                </TableCell>\n                                <TableCell style={styles.tableCell}>\n                                    {employee.incomplete && <Announcement />}\n                                </TableCell>\n                            </TableRow>\n                        })}\n                    </TableBody>\n                </Table>\n            )\n        }\n\n        return (\n            <Grid>\n                {content}\n            </Grid>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(EmployeeList));","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport EmployeeAppBar from '../EmployeeAppBar/EmployeeAppBar';\nimport EmployeeList from '../EmployeeList/EmployeeList';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n})\n\n\nclass SupervisorEmployees extends React.Component {\n  render() {\n    return (\n      <div>\n        <EmployeeAppBar />\n        <EmployeeList />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(SupervisorEmployees));","import React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { Grid } from '@material-ui/core'\n\nimport Nav from '../../components/Nav/Nav';\nimport SupervisorEmployees from './SupervisorEmployees/SupervisorEmployees';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nclass EmployeesView extends React.Component {\n\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n  }\n\n  // if user is not longer logged in this redirects them to the login page\n  componentDidUpdate() {\n    if (!this.props.user.isLoading && this.props.user.userName === null) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render() {\n    let userEmployees;\n    // not limited by role type because this content is used under both roles\n    if (this.props.user.userName) {\n      userEmployees = (\n        <SupervisorEmployees />\n      )\n    }\n    return (\n      <Grid>\n        {userEmployees}\n        <Nav />\n      </Grid>\n\n    );\n  }\n}\n\n//withRouter allows components not directly connected to the router to access history.push\nexport default withRouter(connect(mapStateToProps)(EmployeesView));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../DisplayFeedback/DisplayFeedback.css';\nimport { Grid } from '@material-ui/core';\n//Material Table\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n//In-line Styling\nimport { withStyles } from '@material-ui/core/styles';\n//Material avatar & icons\nimport Icon from '@material-ui/core/Icon';\nimport Avatar from '@material-ui/core/Avatar';\n//Date formatter\nconst moment = require('moment');\n\n//This is the in-line styling for the avatars\nconst styles = {\n    avatar: {\n        margin: 10,\n    },\n    praiseAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: '#4AC985',\n    },\n    correctAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: '#F79B1B',\n    },\n    instructAvatar: {\n        margin: 10,\n        color: '#fff',\n        backgroundColor: '#6C9BD1',\n    },\n    row: {\n        textAlign: 'center',\n        padding: 0,\n    },\n    grid: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}; //end of styles\n\nclass DisplayFeedback extends Component {\n\n    //This will push the user to see a more detailed page of the feedback view\n    clickHandler = (event) => {\n        this.props.history.push(`/feedback/detail/${this.props.feedback.feedbackId}`)\n    } //end of clickHandler\n\n    render() {\n\n        //This is how the avatar icon changes according to the category name of the feedback\n        let content = null;\n        if (this.props.feedback.id === 1) {\n            content = <TableCell style={styles.row}>\n                        <Grid style={styles.grid}>\n                            <Avatar style={styles.praiseAvatar}><Icon>thumb_up</Icon></Avatar>\n                        </Grid>\n                    </TableCell>\n        } else if (this.props.feedback.id === 3) {\n            content = <TableCell style={styles.row}>\n                        <Grid style={styles.grid}>\n                            <Avatar style={styles.correctAvatar}><Icon>thumb_down</Icon></Avatar>\n                        </Grid>\n                    </TableCell>\n        } else if (this.props.feedback.id === 2) {\n            content = <TableCell style={styles.row}>\n                        <Grid style={styles.grid}>\n                            <Avatar style={styles.instructAvatar}><Icon>thumbs_up_down</Icon></Avatar>\n                        </Grid>\n                    </TableCell>\n        }; //end of if-else\n\n        return (\n            <TableRow>\n                {/* {content} is coming from the changing avatar icon logic */}\n                { content }\n                {/* This is how the details of the feedback are only displaying up to a certain\n                character length instead of the whole feedback displaying */}\n                <TableCell onClick={this.clickHandler} style={styles.row}>\n                    <Grid style={styles.grid}>\n                        {this.props.feedback.details.slice(0,15)}...\n                    </Grid>\n                </TableCell>\n                {/* This is how the date is formatted coming back from the server */}\n                <TableCell style={styles.row}>\n                        {moment(this.props.feedback.date_created).format(\"MM/DD/YY\")}\n                </TableCell>\n            </TableRow>\n        ) //end of return\n    } //end of render\n} //end of DisplayFeedback\n\nexport default withStyles(styles)(connect()(DisplayFeedback));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//Chart\nimport { Doughnut } from 'react-chartjs-2';\n\nclass DisplayOverallGraph extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            qualityCount: [],\n            employeeSummary: {\n                labels: ['Praise', 'Instruct', 'Correct'],\n                datasets: [{\n                    data: [this.props.totalFeedback.praise, this.props.totalFeedback.instruct, this.props.totalFeedback.correct],\n                    backgroundColor: ['#4AC985', '#6C9BD1', '#F79B1B'],\n                }]\n            },\n        }; //end of this.state\n    } //end of constructor\n\n    render() {\n        return (\n            <Doughnut data={this.state.employeeSummary} />\n        ) //end of return\n    } //end of render\n} //end of DisplayOverallGraph\n\nexport default connect()(DisplayOverallGraph);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { QUALITY_ACTIONS } from '../../../../../redux/actions/qualityActions';\n//Chart\nimport { Bar } from 'react-chartjs-2';\n//Date formatter\nconst moment = require('moment');\n\nconst mapStateToProps = state => ({\n    quality_types: state.quality_types\n});\n\nconst lastFourWeeksOnly = feedback => moment(feedback.date_created).isSameOrAfter(moment().subtract(4, 'weeks').startOf('isoWeek'));\n\nconst getIdForQuality = (types, name) => types.find(type => type.name === name).id;\n\nconst totalsByWeek = (feedback, quality_types) => {\n    //For each week for the past three whole weeks, get the total of each quality type given\n    const weekFourStart = moment().subtract(4, 'weeks').startOf('isoWeek');\n    const weekThreeStart = moment().subtract(3, 'weeks').startOf('isoWeek');\n    const weekTwoStart = moment().subtract(2, 'weeks').startOf('isoWeek');\n    const weekOneStart = moment().subtract(1, 'weeks').startOf('isoWeek');\n    const thisWeekStart = moment().startOf('isoWeek');\n\n    const blankSummary = quality_types.reduce((summary, quality) => {\n        summary[quality.id] = 0;\n        return summary;\n    }, {});\n\n    return feedback.reduce((summary, entry) => {\n        const date =  moment(entry.date_created);\n        if (date.isBetween(weekFourStart, weekThreeStart, null, '[)')) {\n            summary.fourWeeksAgo[entry.id] += 1;\n        } else if (date.isBetween(weekThreeStart, weekTwoStart, null, '[)')) {\n            summary.threeWeeksAgo[entry.id] += 1;\n        } else if (date.isBetween(weekTwoStart, weekOneStart, null, '[)')) {\n            summary.twoWeeksAgo[entry.id] += 1;\n        } else if (date.isBetween(weekOneStart, thisWeekStart, null, '[)')) {\n            summary.oneWeekAgo[entry.id] += 1;\n        }\n        return summary;\n    }, ({\n        fourWeeksAgo: {...blankSummary},\n        threeWeeksAgo: { ...blankSummary },\n        twoWeeksAgo: { ...blankSummary },\n        oneWeekAgo: { ...blankSummary },\n    }));\n};\n\n//Gets the names of the past four weeks from today's date\nconst namesOfPastFourWeeks = () => ([\n    moment().subtract(4, 'weeks').startOf('isoWeek').format('MMM DD'),\n    moment().subtract(3, 'weeks').startOf('isoWeek').format('MMM DD'),\n    moment().subtract(2, 'weeks').startOf('isoWeek').format('MMM DD'),\n    moment().subtract(1, 'weeks').startOf('isoWeek').format('MMM DD'),\n]);\n\n//Get the totals objects for each week and return an array with only the values for a specific quality \nconst qualityByWeek = (totals, qualityId) => Object.values(totals).map(week => week[qualityId]);\n\nclass DisplayWeeklyGraph extends Component {\n    componentDidMount() {\n        if(!this.props.quality_types.length) {\n            this.props.dispatch({type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES})\n        }\n    }\n\n    render() {\n        const {quality_types, data} = this.props;\n\n        if(!(quality_types.length && data.length)) return null;\n\n        const weekNames = namesOfPastFourWeeks();\n        const fourWeeksFeedback = data.filter(lastFourWeeksOnly);\n        const weeklyQualityTotals = totalsByWeek(fourWeeksFeedback, quality_types);\n\n        const options = {\n            scales: {\n                xAxes: [{\n                    stacked: true\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        suggestedMax: 5,\n                    }\n                }]\n            },\n        }; //end of options for the bar graph\n\n        let barData = {\n            datasets: [{\n                label: 'Praise',\n                data: qualityByWeek(weeklyQualityTotals, getIdForQuality(quality_types, 'praise')),\n                backgroundColor: '#4AC985',\n            },\n            {\n                label: 'Instruct',\n                data: qualityByWeek(weeklyQualityTotals, getIdForQuality(quality_types, 'instruct')),\n                backgroundColor: '#6C9BD1',\n            },\n            {\n                label: 'Correct',\n                data: qualityByWeek(weeklyQualityTotals, getIdForQuality(quality_types, 'correct')),\n                backgroundColor: '#F79B1B',\n            }],\n            labels: weekNames,\n        }; //end of barData\n\n        return (\n            <div>\n                <Bar\n                    data={barData}\n                    options={options}\n                />\n            </div>\n        ) //End of return\n    } //End of render\n}; //End of DisplayWeeklyGraph class\n\nexport default connect(mapStateToProps)(DisplayWeeklyGraph);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { QUALITY_ACTIONS } from '../../../../../redux/actions/qualityActions';\n//Chart\nimport { Bar } from 'react-chartjs-2';\n//Date formatter\nconst moment = require('moment');\n\nconst mapStateToProps = state => ({\n    quality_types: state.quality_types\n});\n\nconst getIdForQuality = (types, name) => types.find(type => type.name === name).id;\n\nconst getQuarterlyMonthlyNames = () => {\n    const names = [];\n    for (let i = 4; i > 0; i--) {\n        names.push(moment().subtract(i, 'months').format('MMM'));\n    }\n    return names;\n}\n\nconst qualityByMonth = (totals, qualityId) => Object.values(totals).map(month => month[qualityId]);\n\nconst totalsByMonth = (feedback, quality_types) => {\n    const months = [4, 3, 2, 1];\n    const feedbackByMonth = months.map(sortFeedbackByMonth(feedback));\n    return feedbackByMonth.map(feedback => getQualityTotalsForMonth(feedback, quality_types));\n};\n\nconst sortFeedbackByMonth = feedback => monthNumber => {\n    const monthStart = moment().subtract(monthNumber, 'months').startOf('month');\n    const monthEnd = moment().subtract(monthNumber, 'months').endOf('month');\n\n    return feedback.filter(entry => {\n        const entryDate = moment(entry.date_created);\n        return entryDate >= monthStart && entryDate <= monthEnd;\n    });\n};\n\nconst getQualityTotalsForMonth = (feedbackForMonth, quality_types) => {\n    const blankMonthlySummary = quality_types.reduce((summary, quality) => {\n        summary[quality.id] = 0;\n        return summary;\n    }, {});\n\n    return feedbackForMonth.reduce((summary, entry) => {\n        summary[entry.id] += 1;\n        return summary;\n    }, { ...blankMonthlySummary });\n};\n\nclass DisplayQuarterlyGraph extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        if (!this.props.quality_types.length) {\n            this.props.dispatch({ type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES });\n        }\n    }\n\n    render() {\n        const { quality_types, data } = this.props;\n\n        if (!(quality_types.length && data.length)) return null;\n\n        const monthlyTotals = totalsByMonth(data, quality_types);\n\n        const options = {\n            responsive: true,\n            scales: {\n                xAxes: [{\n                    stacked: true,\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        suggestedMax: 5,\n                    }\n                }]\n            },\n        } //End of options for the bar graph\n\n        let barData = {\n            datasets: [{\n                label: 'Praise',\n                data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'praise')),\n                backgroundColor: '#4AC985',\n                borderWidth: 1,\n            },\n            {\n                label: 'Instruct',\n                data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'instruct')),\n                backgroundColor: '#6C9BD1',\n                borderWidth: 1,\n\n            },\n            {\n                label: 'Correct',\n                data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'correct')),\n                backgroundColor: '#F79B1B',\n                borderWidth: 1,\n            }],\n            labels: getQuarterlyMonthlyNames(),\n        } //End of bar data\n\n        return (\n            <div>\n                <Bar\n                    data={barData}\n                    options={options}\n                />\n            </div>\n        ) //End of return\n    } //End of render\n} //End of DisplayQuarterlyGraph\n\nexport default connect(mapStateToProps)(DisplayQuarterlyGraph);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { QUALITY_ACTIONS } from '../../../../../redux/actions/qualityActions';\n//Chart\nimport { Bar } from 'react-chartjs-2';\n//Date formatter\nconst moment = require('moment');\n\nconst mapStateToProps = state => ({\n    quality_types: state.quality_types\n});\n\nconst getIdForQuality = (types, name) => types.find(type => type.name === name).id;\n\nconst getMonthlyNames = () => {\n    const names = [];\n    for (let i = 12; i > 0; i--) {\n        names.push(moment().subtract(i, 'months').format('MMM'));\n    }\n    return names;\n}\n\nconst qualityByMonth = (totals, qualityId) => Object.values(totals).map(month => month[qualityId]);\n\nconst totalsByMonth = (feedback, quality_types) => {\n    const months = [12,11,10,9,8,7,6,5,4,3,2,1];\n    const now = moment();\n    const feedbackByMonth = months.map(sortFeedbackByMonth(feedback));\n    return feedbackByMonth.map(feedback => getQualityTotalsForMonth(feedback, quality_types));\n};\n\nconst sortFeedbackByMonth = feedback => monthNumber => {\n    const monthStart = moment().subtract(monthNumber, 'months').startOf('month');\n    const monthEnd = moment().subtract(monthNumber, 'months').endOf('month');\n\n    return feedback.filter(entry => {\n        const entryDate = moment(entry.date_created);\n        return entryDate >= monthStart && entryDate <= monthEnd;\n    });\n};\n\nconst getQualityTotalsForMonth = (feedbackForMonth, quality_types) => {\n    const blankMonthlySummary = quality_types.reduce((summary, quality) => {\n        summary[quality.id] = 0;\n        return summary;\n    }, {});\n\n    return feedbackForMonth.reduce((summary, entry) => {\n        summary[entry.id] += 1;\n        return summary;\n    }, {...blankMonthlySummary});\n};\n\nclass DisplayAnnuallyGraph extends Component {\n    componentDidMount() {\n        if (!this.props.quality_types.length) {\n            this.props.dispatch({ type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES })\n        }\n    }\n\n    render() {\n        const { quality_types, data } = this.props;\n\n        if (!(quality_types.length && data.length)) return null;\n\n        const monthlyTotals = totalsByMonth(data, quality_types);\n\n        const options = {\n            scales: {\n                xAxes: [{\n                    stacked: true\n                }],\n                yAxes: [{\n                    stacked: true,\n                    ticks: {\n                        suggestedMax: 5,\n                    }\n                }]\n            },\n        }\n\n        let barData = {\n            datasets: [{\n                label: 'Praise',\n                data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'praise')),\n                backgroundColor: '#4AC985',\n            },\n            {\n                label: 'Instruct',\n                data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'instruct')),\n                backgroundColor: '#6C9BD1',\n            },\n            {\n                label: 'Correct',\n                data: qualityByMonth(monthlyTotals, getIdForQuality(quality_types, 'correct')),\n                backgroundColor: '#F79B1B',\n            }],\n            labels: getMonthlyNames(),\n        }\n\n        return (\n            <div>\n                <Bar\n                    data={barData}\n                    options={options}\n                />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(DisplayAnnuallyGraph);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FEEDBACK_ACTIONS } from '../../../../redux/actions/feedbackActions';\nimport { USER_ACTIONS } from '../../../../redux/actions/userActions';\n//Component Views\nimport DisplayWeeklyGraph from '../DisplayGraphs/DisplayWeeklyGraph/DisplayWeeklyGraph';\nimport DisplayQuarterlyGraph from '../DisplayGraphs/DisplayQuarterlyGraph/DisplayQuarterlyGraph';\nimport DisplayAnnuallyGraph from '../DisplayGraphs/DisplayAnnuallyGraph/DisplayAnnuallyGraph';\n//Swipeable Tab Views\nimport SwipeableViews from 'react-swipeable-views';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Typography, Grid } from '@material-ui/core';\n\nfunction TabContainer({ children, dir }) {\n    return (\n        <Typography component=\"div\" dir={dir} style={{ padding: 5 }}>\n            {children}\n        </Typography>\n    );\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired,\n    dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n});\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    feedback: state.feedback.feedback,\n});\n\nclass DisplaySwipeableTabs extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            weeklyQualityCount: [],\n            quarterlyQualityCount: [],\n            annuallyQualityCount: [],\n        };\n    } //end of constructor\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    handleChangeIndex = index => {\n        this.setState({ value: index });\n    };\n\n    componentDidMount() {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n        this.props.dispatch({ type: FEEDBACK_ACTIONS.FETCH_CURRENT_EMPLOYEE_FEEDBACK });\n    }; //end of componentDidMount()\n\n    render() {\n        const { theme } = this.props;\n\n        return (\n            <Grid container spacing={0}>\n                <Grid item xs={12}>\n                    <AppBar position=\"static\" color=\"default\">\n                        <Tabs\n                            value={this.state.value}\n                            onChange={this.handleChange}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            fullWidth>\n                            <Tab label=\"Weekly\" />\n                            <Tab label=\"Quarterly\" />\n                            <Tab label=\"Annually\" />\n                        </Tabs>\n                    </AppBar>\n                    <SwipeableViews\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={this.state.value}\n                        onChangeIndex={this.handleChangeIndex}\n                    >\n                        <TabContainer dir={theme.direction}>\n                            {/* This will contain the past 30 days bar chart view */}\n                            <DisplayWeeklyGraph data={this.props.feedback.currentEmployee} />      \n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            {/* This will contain the quarterly bar chart view */}\n                            <DisplayQuarterlyGraph data={this.props.feedback.currentEmployee}/>\n                        </TabContainer>\n                        <TabContainer dir={theme.direction}>\n                            {/* This will contain the annually bar chart view */}\n                            <DisplayAnnuallyGraph data={this.props.feedback.currentEmployee}/>\n                        </TabContainer>\n                    </SwipeableViews>\n                </Grid>\n            </Grid>\n        )\n    }\n}\n\nDisplaySwipeableTabs.propTypes = {\n    theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(connect(mapStateToProps)(DisplaySwipeableTabs));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Grid } from '@material-ui/core';\nimport axios from 'axios';\nimport { FEEDBACK_ACTIONS } from '../../../redux/actions/feedbackActions';\nimport { USER_ACTIONS } from '../../../redux/actions/userActions';\nimport { USER_ROLES } from '../../../constants';\n//Components\nimport DisplayFeedback from './DisplayFeedback/DisplayFeedback';\nimport DisplayOverallGraph from './DisplayGraphs/DisplayOverallGraph/DisplayOverallGraph';\nimport DisplaySwipeableTabs from './DisplaySwipeableTabs/DisplaySwipeableTabs';\n//Styling\nimport './IndividualEmployeeSummaryView.css';\nimport { withStyles } from '@material-ui/core/styles';\n//Buttons\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport ArrowDropUp from '@material-ui/icons/ArrowDropUp';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\n//Material Table\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport orderBy from 'lodash/orderBy';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    feedback: state.feedback.feedback,\n    id: state.id,\n    sort: state.sort\n});\n\nconst styles = {\n    row: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    tableCell: {\n        textAlign: 'center',\n        padding: 0,\n    },\n    grid: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    color: {\n        color: '#f7fcff',\n    },\n    bigGrid: {\n        margin: 10,\n        justifyContent: 'center',\n    }\n}; //end of styles\n\nconst invertDirection = {\n    asc: 'desc',\n    desc: 'asc'\n}; //End of invertDirection\n\nclass IndividualEmployeeSummaryView extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            totalQualityCount: [],\n        }\n    } //End of constructor\n\n    componentDidMount() {\n        this.getTotalFeedbackCount();\n        orderBy(this.state.feedback, this.props.sort.column, this.props.sort.direction);\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n        this.props.dispatch({ type: FEEDBACK_ACTIONS.FETCH_CURRENT_EMPLOYEE_FEEDBACK, payload: { id: this.props.id } });\n    } //End of componentDidMount\n\n    //This will get the total feedback of each category for the employee\n    getTotalFeedbackCount() {\n        axios.get(`/api/feedback/employeeFeedbackCount/${this.props.id}`)\n            .then((response) => {\n                this.setState({\n                    totalQualityCount: response.data\n                })\n            }).catch((error) => {\n                console.log('error in getTotalFeedbackCount', error);\n                alert('Cannot get total client feedback counts!')\n            });\n    } //End of getTotalFeedbackCount()\n\n    //Pushes the user to creating a new feedback view\n    createNewFeedbackClick = (event) => {\n        this.props.history.push('/feedback/new');\n    } //End of createNewFeedbackClick\n\n    //Sorts the column \n    handleSort = columnName => {\n        this.props.dispatch({ type: 'ADD_COLUMN_TO_SORT', payload: columnName });\n        let direction = this.props.sort.column === columnName ? invertDirection[this.props.sort.direction] : 'desc';\n        this.props.dispatch({ type: 'ADD_SORT_DIRECTION', payload: direction })\n    } //End of handleSort\n\n    render() {\n        //FAB will render depending on what role the user is logged in as\n        let btn = null;\n        if (this.props.user.role === USER_ROLES.SUPERVISOR) {\n            btn = (\n                <div className=\"btnContainer\">\n                    <Button variant=\"fab\" color=\"secondary\" aria-label=\"Edit\" style={styles.stickyButton}\n                        onClick={this.createNewFeedbackClick}>\n                        <Icon>edit_icon</Icon>\n                    </Button>\n                </div>\n            )\n        } else if (this.props.user.role === USER_ROLES.MANAGER) {\n            btn = (\n                <div></div>\n            )\n        }; //End of if-else\n\n        //Allows the data to be sorted\n        let data = orderBy(this.props.feedback.currentEmployee, this.props.sort.column, this.props.sort.direction);\n\n        return (\n            <div className=\"container\">\n                <Grid container spacing={0}>\n                    <Grid item xs={12}>\n                        <div className=\"outer\">\n                            <AppBar position=\"sticky\">\n                                <Toolbar>\n                                    {/* This arrow_back icon button will take the user back to the /employees view */}\n                                    <IconButton component={Link} to={\"/employees\"}>\n                                        <ArrowBack style={styles.color} />\n                                    </IconButton>\n                                    {/* If the selected employee name is not yet render, display null, otherwise display the first name */}\n                                    <h3>{this.props.feedback.currentEmployee[0] ? this.props.feedback.currentEmployee[0].first_name : null}</h3>\n                                    <div style={styles.grow} />\n                                </Toolbar>\n                            </AppBar>\n                            <br />\n                            <Typography variant=\"headline\" className=\"center\">Overall Summary:</Typography>\n                            {/* This will map over the over the total feedback */}\n                            <Grid style={styles.bigGrid} item xs={12} >\n                                {this.state.totalQualityCount.map((totalFeedback, index) => {\n                                    return (\n                                        <DisplayOverallGraph key={index} totalFeedback={totalFeedback} />\n                                    )\n                                })}\n                            </Grid>\n                            {/* This is the FAB for making a new feedback but will only show if the user is a supervisor */}\n                            {btn}\n                            < br />\n                            {/* This is where the swipeable graphs will display */}\n                            <Grid style={styles.bigGrid} item xs={12} >\n                                <DisplaySwipeableTabs />\n                            </Grid>\n                            {/* Table below will display a list of all of the feedbacks */}\n                            <Typography variant=\"subheading\" className=\"center\">Latest Feedbacks:</Typography>\n                            <div>\n                                <Table>\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell style={styles.tableCell} onClick={() => this.handleSort('id')}>\n                                                <Grid style={styles.grid}>\n                                                    Category\n                                                {this.props.sort.column === 'id' ? (\n                                                        this.props.sort.direction === 'asc' ? (\n                                                            <ArrowDropUp />) : (<ArrowDropDown />)) : null}</Grid></TableCell>\n                                            <TableCell style={styles.tableCell}>\n                                                <Grid style={styles.grid}>\n                                                    Feedback\n                                                </Grid></TableCell>\n                                            <TableCell style={styles.tableCell} onClick={() => this.handleSort('date_created')}>\n                                                <Grid style={styles.grid}>\n                                                    Date Given\n                                                {this.props.sort.column === 'date_created' ? (\n                                                        this.props.sort.direction === 'asc' ? (\n                                                            <ArrowDropUp />) : (<ArrowDropDown />)) : null}</Grid></TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {/* This will map over \"data\" and pass it as \"feedback\" to the DisplayFeedback Component\n                                                in order to display all of the feedbacks*/}\n                                        {data.map((feedbacksAtIndex, index) => {\n                                            return (\n                                                <DisplayFeedback key={index} feedback={feedbacksAtIndex} history={this.props.history} />\n                                            )\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        ) //end of return\n    } //end of render\n} //end of IndividualEmployeeSummaryView class\n\nexport default withStyles(styles)(connect(mapStateToProps)(IndividualEmployeeSummaryView));","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst styles = {\n    color: {\n        color: '#f7fcff',\n    },\n}\n\nclass FeedbackFormAppBar extends React.Component {\n    handleClick = (event) => {\n        this.props.history.push('/employees');\n        this.props.dispatch({ type: 'ADD_NAV_VALUE', payload: 'employees' });\n    };\n\n    render() {\n        return (\n            <AppBar position=\"sticky\" >\n                <Toolbar>\n                    <IconButton onClick={this.handleClick}><ArrowBack style={{ color: '#f7fcff' }} /></IconButton>\n                    <h3 style={{ color: '#f7fcff' }}>New Feedback</h3>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(connect()(FeedbackFormAppBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport {\n  Grid, FormControl, FormLabel, NativeSelect, InputLabel, Input, FormControlLabel,\n  RadioGroup, Radio, FormGroup, Switch, TextField, Checkbox, Button\n} from '@material-ui/core';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\n\n// import Nav from '../Nav/Nav';\nimport FeedbackFormAppBar from './FeedbackFormAppBar';\n\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { PEOPLE_ACTIONS } from '../../redux/actions/peopleActions';\nimport { FEEDBACK_ACTIONS } from '../../redux/actions/feedbackActions';\nimport { FOLLOW_UP_ACTIONS } from '../../redux/actions/followupActions';\nimport { QUALITY_ACTIONS } from '../../redux/actions/qualityActions';\nimport { USER_ROLES } from '../../constants';\n\nconst styles = {\n  grid: {\n    margin : 15,\n  },\n  form: { \n    maxWidth: '350px', \n    margin: '0 auto', \n    padding: '20px', \n    textAlign: 'center',\n  }\n};\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  quality_types: state.quality_types,\n  employees: state.people.staff.supervisorEmployees,\n  newPostedFeedback: state.feedback.newPostedFeedback,\n  newPostedFollowup: state.followup.newPostedFollowup,\n});\n\n\nlet image = '';\nclass FeedbackFormView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employeeId: '',\n      quality_id: null,\n      taskRelated: false,\n      cultureRelated: false,\n      followUpNeeded: false,\n      followUpDate: '',\n      details: '',\n      image_path: '',\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n\n    // if quality_types is not populated, fetch the data from the server\n    if (!this.props.quality_types.length) {\n      this.props.dispatch({ type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES });\n    }\n    this.config = {\n      cloud_name: 'dnjpvylxb',\n      upload_preset: 'ijxdygxf',\n    }\n  }\n\n  componentDidUpdate() {\n    const { user, employees, newPostedFeedback, newPostedFollowup, dispatch, history } = this.props;\n\n    // if the user is unauthenticated, redirect to the home page\n    if (!user.isLoading && user.userName === null) {\n      history.push('/home');\n    // if the user is a manager and not a supervisor, redirect to the user to their dashboard\n    } else if (!user.isLoading && user.userName && user.role !== USER_ROLES.SUPERVISOR) {\n      history.push('/dashboard');\n    // if the user is loaded and is a supervisor, get that supervisor's employees\n    } else if (!user.isLoading && user.userName && user.role === USER_ROLES.SUPERVISOR) {\n      if (!employees.length) {\n        this.getEmployees();\n      }\n    }\n\n    /* If newPostedFeedback, and optionally newPostedFollowup are populated, then the user\n    has successfully submitted the feedback form, and the newly posted feedback and optional\n    follow up have been stored in the database and returned back to the client.\n    These are stored in Redux so that they may be displayed on the Feedback Confirmation View. */\n    if (newPostedFeedback) {\n      if (this.state.followUpNeeded) {\n        if (newPostedFollowup) {\n          dispatch({ type: FEEDBACK_ACTIONS.DISPLAY_FEEDBACK_CONFIRMATION });\n          history.push('/feedback/confirmation');\n        }\n      } else {\n        dispatch({ type: FEEDBACK_ACTIONS.DISPLAY_FEEDBACK_CONFIRMATION });\n        history.push('/feedback/confirmation');\n      }\n    }\n  }\n\n  // get the list of employees for the current supervisor\n  getEmployees = () => {\n    const { user, dispatch } = this.props;\n    axios.get(`/api/staff/employees/${user.id}`)\n      .then((response) => {\n        const employees = response.data;\n        dispatch({ type: PEOPLE_ACTIONS.SET_SUPERVISOR_EMPLOYEES, payload: employees });\n      }).catch((error) => {\n        console.log('Supervisor Employee List get error', error);\n        alert('Unable to GET supervisor employees');\n      })\n  };\n\n  // handle changes to the form input fields\n  handleInputChange = formField => event => {\n    // these fields contain boolean values which need to be flipped if the user clicks them\n    const booleanFields = ['taskRelated', 'cultureRelated', 'followUpNeeded'];\n\n    // if the form field is for a boolean value...\n    if (booleanFields.includes(formField)) {\n      // ...toggle that value\n      this.setState(prevState => ({\n        [formField]: !prevState[formField]\n      }));\n    } else {\n      // or if not, set the form field to the new value\n      this.setState({\n        [formField]: event.target.value\n      });\n    }\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n    // form fields from the component state\n    const { employeeId, quality_id, taskRelated, cultureRelated, followUpNeeded, followUpDate, details, image_path } = this.state;\n\n    // the id and email of the logged in, authenticated user\n    const supervisorId = this.props.user.id;\n    const email = this.props.user.email_address;\n\n    /*\n    find the employee from the list of employees stored in Redux using the \"employeeId\"\n    */\n    const employeeHasPendingFollowUp = this.props.employees.find(employee => Number(employee.id) === Number(employeeId)).incomplete;\n\n    // the data to send to the server in the POST body\n    const data = {\n      supervisorId,\n      employeeId,\n      dateCreated: new Date(),\n      quality_id,\n      taskRelated,\n      cultureRelated,\n      details,\n      email,\n      image_path,\n    };\n\n    // Saga to send new feedback to the server\n    this.props.dispatch({\n      type: FEEDBACK_ACTIONS.ADD_FEEDBACK,\n      payload: data\n    });\n\n    /* \n    if the employee currently has pending follow up, complete that pending follow up,\n    then, if the new feedback added itself includes a follow up reminder, add that new follow up\n    */\n    if (employeeHasPendingFollowUp) {\n      axios.put(`/api/followup/complete/${employeeId}`)\n        .then(() => {\n          if (followUpNeeded) {\n            this.props.dispatch({\n              type: FOLLOW_UP_ACTIONS.ADD_FOLLOWUP,\n              payload: {\n                employeeId,\n                followUpDate\n              }\n            });\n          }\n        }).catch(error => {\n          console.log(`/api/followup/complete/${employeeId} PUT error:`, error);\n        });\n    /* if the user did not have pending follow up when the form was submitted,\n    add the new followup to the database */\n    } else if (followUpNeeded) {\n      this.props.dispatch({\n        type: FOLLOW_UP_ACTIONS.ADD_FOLLOWUP,\n        payload: {\n          employeeId,\n          followUpDate\n        }\n      });\n    }\n  };\n\n  // used for feedback image upload\n  openCloudinary = (event) => {\n    event.preventDefault();\n    window.cloudinary.openUploadWidget(this.config, (error, result) => {\n      if (result) {\n        console.log(result.info.url);\n        this.setState({\n          ...this.state,\n          image_path: result.info.url\n        });\n      } else if (error) {\n        console.log('Error', error);\n      }\n    })\n    this.props.dispatch({ type: 'ADD_IMAGE', payload: image });\n  }\n\n  backToDashboard = () => {\n    this.props.history.push('/dashboard');\n  };\n\n  // take a known name of a feedback quality and return its corresponding id from the\n  // quality_types list stored in Redux\n  getQualityIdByName = name => this.props.quality_types.find(type => type.name === name).id;\n\n  render() {\n    const {\n      employeeId,\n      quality_id,\n      taskRelated,\n      cultureRelated,\n      details,\n      followUpNeeded,\n      followUpDate\n    } = this.state;\n\n    const { employees } = this.props;\n\n    // get the ids of the quality_types, to be used in the radio buttons\n    let praiseId, instructId, correctId;\n    if (this.props.quality_types.length) {\n      praiseId = this.getQualityIdByName('praise');\n      instructId = this.getQualityIdByName('instruct');\n      correctId = this.getQualityIdByName('correct');\n    }\n\n    return (\n      <Grid container className=\"padding-bottom\" style={{marginTop: 0}}>\n        <Grid item xs={12}>\n          <FeedbackFormAppBar />\n          <form style={styles.form} onSubmit={this.handleFormSubmit}>\n            <Grid item xs={12} style={{ width: '100%' }}>\n              <FormControl style={{ width: '75%', marginBottom: '20px' }} required>\n                <InputLabel shrink htmlFor=\"employeeId\">Employee</InputLabel>\n                <NativeSelect\n                  value={employeeId}\n                  onChange={this.handleInputChange('employeeId')}\n                  input={<Input name=\"employee\" id=\"employeeId\" />}\n                >\n                  <option value=\"\" disabled>Select an employee...</option>\n                  {employees.map(employee => (\n                    <option key={employee.id} value={employee.id}>\n                      {`${employee.first_name} ${employee.last_name}`}\n                    </option>\n                  ))}\n                </NativeSelect>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl style={{ marginBottom: '20px' }} required>\n                <FormLabel>Feedback Quality</FormLabel>\n                <RadioGroup style={{display: 'flex', flexDirection: 'row'}}\n                  aria-label=\"feedback-type\"\n                  name=\"quality_id\"\n                  value={quality_id}\n                  onChange={this.handleInputChange('quality_id')}\n                >\n                  {praiseId && <FormControlLabel key={praiseId} value={praiseId.toString()} label={'Praise'} control={<Radio />} />}\n                  {instructId && <FormControlLabel key={instructId} value={instructId.toString()} label={'Instruct'} control={<Radio />} />}\n                  {correctId && <FormControlLabel key={correctId} value={correctId.toString()} label={'Correct'} control={<Radio />} />}\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl style={{ marginBottom: '10px' }}>\n                <FormLabel>This feedback is:</FormLabel>\n                <FormGroup style={{display: 'flex', flexDirection: 'row'}}>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={taskRelated}\n                        onChange={this.handleInputChange('taskRelated')}\n                      />\n                    }\n                    label=\"Task-Related\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={cultureRelated}\n                        onChange={this.handleInputChange('cultureRelated')}\n                      />\n                    }\n                    label=\"Culture-Related\"\n                  />\n                </FormGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField required style={{width: '75%', marginBottom: '20px' }}\n                type=\"text\"\n                label=\"Feedback Details\"\n                placeholder=\"Add feedback details\"\n                value={details}\n                onChange={this.handleInputChange('details')}\n                multiline\n                rows=\"3\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControl>\n                <FormControlLabel\n                  label=\"Follow-Up Needed?\"\n                  control={\n                    <Checkbox\n                      checked={followUpNeeded}\n                      onChange={this.handleInputChange('followUpNeeded')}\n                    />\n                  }\n                />\n              </FormControl>\n            </Grid>\n            {/* follow-up date picker renders if the user checks the \"Follow-Up Needed? box\" */}\n            {followUpNeeded &&\n              <Grid item xs={12}>\n                <FormControl style={{ marginBottom: '20px' }}>\n                  <TextField\n                    type=\"date\"\n                    label=\"Follow-Up Date\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    value={followUpDate}\n                    onChange={this.handleInputChange('followUpDate')}\n                  />\n                </FormControl>\n              </Grid>}\n             {/* input to upload images through cloudinary */}\n             <Grid item xs={12} style={styles.grid}>\n                <FormControl>\n                  <Button onClick={this.openCloudinary}>\n                    <CloudUpload />&nbsp;Upload Image\n                  </Button>\n                </FormControl>\n              </Grid>\n            <div>\n              <Button onClick={this.backToDashboard}>Cancel</Button>\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\">Submit</Button>\n            </div>\n          </form>\n            </Grid>\n        </Grid>\n        );\n      }\n    }\n    \nexport default connect(mapStateToProps)(FeedbackFormView);","import React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { PEOPLE_ACTIONS } from '../../redux/actions/peopleActions';\nimport { FEEDBACK_ACTIONS } from '../../redux/actions/feedbackActions';\nimport { USER_ROLES } from '../../constants';\nimport { QUALITY_ACTIONS } from '../../redux/actions/qualityActions';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  quality_types: state.quality_types,\n  employees: state.people.staff.supervisorEmployees,\n  confirmationDisplayed: state.feedback.confirmationDisplayed,\n  newPostedFeedback: state.feedback.newPostedFeedback,\n  newPostedFollowup: state.followup.newPostedFollowup,\n});\n\nclass FeedbackFormConfirmationView extends React.Component {\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    if (!this.props.quality_types.length) {\n      this.props.dispatch({ type:  QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES});\n    }\n  }\n  \n  componentDidUpdate() {\n    const {user, employees, history, newPostedFeedback} = this.props;\n    if (!user.isLoading && user.userName === null) {\n      history.push('/home');\n    } else if (!user.isLoading && user.userName && user.role !== USER_ROLES.SUPERVISOR) {\n      history.push('/dashboard');\n    } else if (!user.isLoading && user.userName && user.role === USER_ROLES.SUPERVISOR) {\n      if (!employees.length) {\n        this.getEmployees();\n      }\n    } else if (!newPostedFeedback) {\n      history.push('/dashboard');\n    }\n  }\n\n  getEmployees = () => {\n    const { user, dispatch } = this.props;\n    axios.get(`/api/staff/employees/${user.id}`)\n    .then((response) => {\n      const employees = response.data;\n      dispatch({ type: PEOPLE_ACTIONS.SET_SUPERVISOR_EMPLOYEES, payload: employees });\n    }).catch((error) => {\n      console.log('Supervisor Employee List get error', error);\n      alert('Unable to GET supervisor employees');\n    })\n  };\n\n  handleClick = () => {\n    this.props.history.push('/dashboard');\n  };\n\n  componentWillUnmount() {\n    this.props.dispatch({\n      type: FEEDBACK_ACTIONS.FEEDBACK_CONFIRMATION_ACKWNOLEDGED\n    });\n  }\n\n  render() {\n    if (this.props.confirmationDisplayed) {\n      \n      const feedback = this.props.newPostedFeedback;\n      const followup = this.props.newPostedFollowup;\n      const employee = this.props.employees.find(employee => Number(employee.id) === Number(feedback.employee_id));\n      \n      return (\n        <Grid container style={{padding: '10px'}}>\n          <Grid item xs={12}>\n            <Typography variant=\"h4\" className=\"center\" gutterBottom>\n              Feedback Confirmed\n            </Typography>\n            <Typography variant=\"h5\" className=\"center\" gutterBottom>\n              Employee\n            </Typography>\n            <Typography variant=\"body1\" className=\"center\" gutterBottom>\n              {`${employee.first_name} ${employee.last_name}`}\n            </Typography>\n            <Typography variant=\"h5\" className=\"center\" gutterBottom>\n              Feedback\n            </Typography>\n            <Typography variant=\"body1\" className=\"center\" gutterBottom>\n              Quality: {this.props.quality_types.find(type => type.id === feedback.quality_id).name}<br />\n              {feedback.task_related && 'Task-Related'}\n              {feedback.task_related && <br />}\n              {feedback.culture_related && 'Culture-Related'}\n              {feedback.culture_related && <br />}\n            </Typography>\n            <Typography variant=\"h5\" className=\"center\" gutterBottom>\n              Details\n            </Typography>\n            <Typography variant=\"body1\" className=\"center\" gutterBottom>\n              {feedback.details}\n            </Typography>\n            {followup &&\n              <div>\n                <Typography variant=\"h6\" className=\"center\" gutterBottom>\n                  Follow-up needed on\n                </Typography>\n                <Typography>\n                  {moment(followup.follow_up_date).format('dddd, MMMM Do YYYY')}\n                </Typography>\n              </div>\n            }\n          </Grid>\n          <Grid item xs={12}>\n            <Button onClick={this.handleClick}>\n              Okay\n            </Button>\n          </Grid>\n        </Grid>\n      );\n    } else {\n      this.props.history.push('/dashboard');\n      return null;\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(FeedbackFormConfirmationView);","import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { QUALITY_ACTIONS } from '../../redux/actions/qualityActions';\n\nimport {\n  Grid, AppBar, Toolbar, IconButton, FormControl, FormLabel,\n  FormControlLabel, RadioGroup, Radio, FormGroup, Switch, TextField,\n  Checkbox, Button, Typography\n} from '@material-ui/core';\n\nimport { ArrowBack } from '@material-ui/icons';\n\nconst booleanFields = ['task_related', 'culture_related', 'follow_up_needed'];\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  quality_types: state.quality_types,\n});\n\n// url path - feedback/detail/:feedbackId\n\n/* This component displays the details of an entry of feedback already given */\nclass FeedbackDetailView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalFeedback: null,\n      formFields: null,\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    if (!this.props.quality_types.length) {\n      this.props.dispatch({ type: QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES });\n    }\n  }\n\n  componentDidUpdate() {\n    const { user, history } = this.props;\n\n    if (!user.isLoading && user.userName === null) {\n      history.push('/home');\n    } else if (!user.isLoading && user.userName) {\n      // if the user is loaded but the feedback has not been loaded, fetch the feedback\n      if (!this.state.originalFeedback) {\n        axios.get(`/api/feedback/detail/${this.props.match.params.feedbackId}`)\n          .then(response => {\n            const data = response.data;\n            // if the feedback has a follow up date, convert it to a format to display on the screen\n            // set the boolean \"follow_up_needed\" to true so that we can display the follow up date on the screen\n            if (data.follow_up_date) {\n              data.follow_up_date = moment(data.follow_up_date).format('YYYY-MM-DD');\n              data.follow_up_needed = true;\n            } else {\n              data.follow_up_date = '';\n            }\n            this.setState({\n              originalFeedback: data,\n              formFields: { ...data }\n            });\n          }).catch(error => {\n            console.log(`/api/feedback/detail/${this.props.match.params.feedbackId} GET request error:`, error);\n          });\n      }\n    }\n  }\n\n  getQualityName = qualityId => this.props.quality_types.find(type => type.id === qualityId).name;\n\n  handleInputChange = fieldName => event => {\n    if (booleanFields.includes(fieldName)) {\n      this.setState({\n        formFields: {\n          ...this.state.formFields,\n          [fieldName]: !this.state.formFields[fieldName]\n        }\n      });\n    } else {\n      this.setState({\n        formFields: {\n          ...this.state.formFields,\n          [fieldName]: String(event.target.value)\n        }\n      });\n    }\n    console.log(fieldName, event.target.value);\n  };\n\n  abandonChanges = () => {\n    this.setState({\n      formFields: { ...this.state.originalFeedback }\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const editedFeedback = { ...this.state.formFields, date_edited: new Date() };\n    axios.put('/api/feedback', editedFeedback)\n      .then(response => {\n        if (!editedFeedback.follow_up_needed) {\n          editedFeedback.follow_up_date = '';\n        }\n        this.setState({\n          originalFeedback: { ...editedFeedback },\n          formFields: { ...editedFeedback }\n        });\n      }).catch(error => {\n        console.log('/api/feedback PUT error:', error);\n      });\n  };\n\n  backToPreviousPage = () => {\n    this.props.history.push('/individualEmployee');\n  };\n\n  render() {\n    const { originalFeedback, formFields } = this.state;\n    const { quality_types } = this.props;\n    let content = null;\n    if (!originalFeedback || !quality_types) return null;\n\n    const editingCutoffTime = moment(originalFeedback.date_created).add(72, 'hours');\n    const editingAllowed = moment().isBefore(editingCutoffTime);\n\n    /*\n    if the feedback was created less than 72 hours ago, show the feedback content\n    within an editable form, which the user can use to edit the feedback and resave it.\n    Otherwise, show the feedback details as text for viewing only.\n    */\n    if (editingAllowed) {\n      // the content if the user is allowed to edit the feedback\n      content = (\n        <form onSubmit={this.handleFormSubmit} style={{ marginTop: '20px' }}>\n          <FormControl required>\n            <FormLabel>Feedback Quality</FormLabel>\n            <RadioGroup\n              aria-label=\"feedback-type\"\n              name=\"quality_id\"\n              value={formFields.quality_id.toString()}\n              onChange={this.handleInputChange('quality_id')}\n            >\n              {this.props.quality_types.map(quality => (\n                <FormControlLabel key={quality.id} value={quality.id.toString()} label={quality.name} control={<Radio />} />\n              ))}\n            </RadioGroup>\n          </FormControl>\n          <FormControl>\n            <FormLabel>This feedback is:</FormLabel>\n            <FormGroup>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formFields.task_related}\n                    onChange={this.handleInputChange('task_related')}\n                  />\n                }\n                label=\"Task-Related\"\n              />\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formFields.culture_related}\n                    onChange={this.handleInputChange('culture_related')}\n                  />\n                }\n                label=\"Culture-Related\"\n              />\n            </FormGroup>\n          </FormControl>\n          <FormControl>\n            <FormControlLabel\n              label=\"Follow-Up Needed?\"\n              control={\n                <Checkbox\n                  checked={formFields.follow_up_needed}\n                  onChange={this.handleInputChange('follow_up_needed')}\n                />\n              }\n            />\n          </FormControl>\n          {formFields.follow_up_needed &&\n            <FormControl>\n              <TextField\n                type=\"date\"\n                label=\"Follow-Up Date\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={formFields.follow_up_date}\n                onChange={this.handleInputChange('follow_up_date')}\n              />\n            </FormControl>}\n          <TextField required\n            label=\"Feedback Details\"\n            placeholder=\"Add feedback details\"\n            value={formFields.details}\n            onChange={this.handleInputChange('details')}\n            multiline\n          />\n          {/* the Save/Cancel buttons only show if the feedback has been changed */}\n          {!_.isEqual(originalFeedback, formFields) &&\n            <div>\n              <Button onClick={this.abandonChanges}>Cancel</Button>\n              <Button type=\"submit\" color=\"primary\" variant=\"contained\">Save</Button>\n            </div>\n          }\n        </form>\n      );\n    } else {\n      // the content if the editing window has expired\n      content = (\n        <div>\n          <Typography variant=\"subtitle2\" className=\"center\">\n            Feedback Quality: {quality_types.length && this.getQualityName(originalFeedback.quality_id)} / {originalFeedback.task_related && 'Task-Related'}\n            {originalFeedback.culture_related && 'Culture-Related'}\n          </Typography>\n          <Typography variant=\"subtitle2\" className=\"center\">\n            Details: {originalFeedback.details}\n          </Typography>\n        </div>\n      );\n    }\n\n    return (\n      <Grid container justify=\"center\">\n        <AppBar position=\"sticky\">\n          <Toolbar>\n            <IconButton onClick={this.backToPreviousPage}><ArrowBack style={{ color: '#f7fcff' }} /></IconButton>\n            <h3 style={{ color: '#f7fcff' }}>Feedback Detail</h3>\n          </Toolbar>\n        </AppBar>\n        <Grid item xs={12}>\n          <div className=\"padding-top\">\n            <Typography variant=\"h4\" className=\"center\">\n              {`${originalFeedback.first_name} ${originalFeedback.last_name}`}\n            </Typography>\n            <Typography variant=\"subtitle2\" className=\"center\">\n              Feedback created on: {moment(originalFeedback.date_created).format(\"MM/DD/YY\")}\n            </Typography>\n            {originalFeedback.date_edited &&\n              <div>\n                <Typography variant=\"subtitle2\" className=\"center\">\n                  Last edited on: {moment(originalFeedback.date_edited).format(\"dddd, MMMM Do YYYY\")}\n                </Typography>\n              </div>\n            }\n            {content}\n          </div>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(FeedbackDetailView);","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Nav from '../Nav/Nav';\n\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nclass EmployeeFormView extends React.Component {\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n  }\n  \n  componentDidUpdate() {\n    if (!this.props.user.isLoading && this.props.user.userName === null) {\n      this.props.history.push('/home');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div>\n          This is the form for adding a new employee.\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default connect(mapStateToProps)(EmployeeFormView);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Nav from '../../components/Nav/Nav';\n\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { triggerLogout } from '../../redux/actions/loginActions';\n\n// Instead of taking everything from state, we just want the user info.\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nclass UserPage extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n  }\n  \n  // componentDidUpdate runs after props and state have changed.\n  //If we arent loading the user call AND we dont have a user, kick us out to home\n  componentDidUpdate() {\n    if (!this.props.user.isLoading && this.props.user.userName === null) {\n      this.props.history.push('/home');\n    }\n  }\n\n  logout = () => {\n    this.props.dispatch(triggerLogout());\n  }\n\n  render() {\n    let content = null;\n\n    if (this.props.user.userName) {\n      content = (\n        <div>\n          <h1\n            id=\"welcome\"\n          >\n            Welcome, { this.props.user.userName }!\n          </h1>\n          <p>Your ID is: {this.props.user.id}</p>\n          <button\n            onClick={this.logout}\n          >\n            Log Out\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <Nav />\n        { content }\n      </div>\n    );\n  }\n}\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, IconButton} from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\nconst styles = {\n    grow: {\n        flexGrow: 1,\n    },\n    input: {\n        width: 100,\n    },\n    color: {\n        color: '#f7fcff'\n    }\n\n}\nclass EditPersonAppBar extends React.Component {\n\n    handleClick = (event) => {\n        console.log('in handleClick');\n        this.props.history.push('/dashboard');\n        this.props.dispatch({ type: 'ADD_NAV_VALUE', payload: 'dashboard'});\n    }\n    render() {\n        return (\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                <IconButton onClick={this.handleClick}><ArrowBack style={styles.color}/></IconButton>\n                <h3>Edit Supervisor</h3>\n                    <div style={styles.grow} />\n\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(EditPersonAppBar));","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { FormControl, FormLabel, Input, Button } from '@material-ui/core';\nimport './editperson.css';\nimport swal from 'sweetalert';\nimport { connect } from 'react-redux';\nimport { PEOPLE_ACTIONS } from '../../redux/actions/peopleActions';\nimport AppBar from './EditPersonAppBar/EditSupervisorAppBar';\n\nconst styles = {\n    formControl: {\n        marginRight: 20,\n        padding: 10,\n        margin: 5\n    },\n}\nclass EditSupervisor extends Component {\n    constructor(props) {\n        super(props);\n        //the values of state will be populated after the component mounts and does an axios request to get the supervisor's information.\n        //then, the input fields will be filled with the supervisor's information (from state)\n        this.state = {\n            supervisor: {}\n        }\n    }\n    //when the component mounts, an axios call will go out to get information about the supervisor whose ID was included in the route parameters\n    componentDidMount = () => {\n        const { match: { params } } = this.props;\n        axios.get(`/api/staff/supervisor/profile?id=${params.personId}`)\n            .then((response) => {\n                this.setState({\n                    supervisor: response.data[0]\n                });\n            }).catch((error) => {\n                console.log('Error getting supervisor', error);\n            });\n    };// end componentDidMount\n\n  //if no one is logged in, push back to login page \n  componentDidUpdate() {\n    if (!this.props.user.isLoading && this.props.user.userName === null) {\n      this.props.history.push('/home');\n    }\n  }//end componentDidUpdate\n  \n    // edits details of a supervisor \n    editPerson = () => {\n        axios({\n            method: 'PUT',\n            url: '/api/staff/supervisor',\n            data: this.state.supervisor\n        }).then((response) => {\n            swal('Success!', `${this.state.supervisor.first_name} ${this.state.supervisor.last_name} edited`, 'success');\n            this.props.dispatch({ type: PEOPLE_ACTIONS.FETCH_SUPERVISORS });\n            this.props.history.push('/dashboard');\n        }).catch((error) => {\n            swal('Warning', `Something went wrong editing ${this.state.supervisor.first_name} ${this.state.supervisor.last_name}. Please try again in a few minutes`);\n            console.log('Cannot update supervisor', error);\n        })\n    }//end editPerson\n\n    //sets the state of the input fields based on user changes \n    handleChangefor = (event, property) => {\n        this.setState({\n            supervisor: {\n                ...this.state.supervisor,\n                [property]: event.target.value\n            }\n        })\n    }//end handleChangeFor\n    render() {\n        return (\n            <div className=\"padding-bottom\">\n                <AppBar />\n                <div className=\"edit-person-form\">\n                    <h1>Edit Supervisor</h1>\n                    <FormControl style={styles.formControl}>\n                        <FormLabel>First Name</FormLabel>\n                        <Input label=\"First Name\" type=\"text\" value={this.state.supervisor.first_name} onChange={(event) => this.handleChangefor(event, 'first_name')} />\n                    </FormControl>\n                    <FormControl style={styles.formControl}>\n                        <FormLabel>Last Name</FormLabel>\n                        <Input type=\"text\" value={this.state.supervisor.last_name} onChange={(event) => this.handleChangefor(event, 'last_name')} />\n                    </FormControl>\n                    <FormControl style={styles.formControl}>\n                        <FormLabel>Employee ID</FormLabel>\n                        <Input type=\"text\" value={this.state.supervisor.employeeId} onChange={(event) => this.handleChangefor(event, 'employeeId')} />\n                    </FormControl>\n                    <FormControl style={styles.formControl}>\n                        <FormLabel>Email Address</FormLabel>\n                        <Input type=\"text\" value={this.state.supervisor.email_address} onChange={(event) => this.handleChangefor(event, 'email_address')} />\n                    </FormControl>\n                    <FormControl style={styles.formControl}>\n                        <FormLabel>Username</FormLabel>\n                        <Input type=\"text\" value={this.state.supervisor.username} onChange={(event) => this.handleChangefor(event, 'username')} />\n                    </FormControl>\n                    <br />\n                    <FormControl style={styles.formControl}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.editPerson}>Save</Button>\n                        <Button onClick={() => this.props.history.push('/dashboard')}>Cancel</Button>\n                </FormControl>\n            </div>\n        </div >\n        );\n    }\n}\nexport default connect()(EditSupervisor); ","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, IconButton} from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\nconst styles = {\n    grow: {\n        flexGrow: 1,\n    },\n    input: {\n        width: 100,\n    },\n    color: {\n        color: '#f7fcff'\n    }\n\n}\nclass EditPersonAppBar extends React.Component {\n\n    handleClick = (event) => {\n        this.props.history.push('/allEmployees');\n        this.props.dispatch({ type: 'ADD_NAV_VALUE', payload: 'employees'});\n    }\n    render() {\n        return (\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                <IconButton onClick={this.handleClick}><ArrowBack style={styles.color}/></IconButton>\n                <h3>Edit Employee</h3>\n                    <div style={styles.grow} />\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(EditPersonAppBar));","import React, {Component} from 'react';\nimport axios from 'axios'; \nimport {FormControl, FormLabel, TextField, Button, Checkbox, NativeSelect} from '@material-ui/core';\nimport './editperson.css';\nimport {connect} from 'react-redux';\nimport { PEOPLE_ACTIONS } from '../../redux/actions/peopleActions';\nimport AppBar from './EditPersonAppBar/EditEmployeeAppBar'; \n\nconst mapStateToProps = state => ({\n    user: state.user,\n    supervisors: state.people.staff.supervisors\n  });\n  const styles = {\n    formControl: {\n        marginRight: 20,\n        padding: 10,\n        margin: 5\n    },\n}\nclass EditEmployee extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            employee: {\n                first_name: '',\n                last_name: '',\n                employeeId: '',\n                image_path: '', \n                supervisor_id: ''\n            },\n        }\n    }\n    componentDidMount = () => {\n        this.getEmployee();\n    }//end componentDidMount \n\n    //if no one is logged in, push back to login page \n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n          this.props.history.push('/home');\n        }\n      }//end componentDidUpdate\n\n    //if an employee is removed, they will be marked inactive in the database. \n    //only active employees should render in employee lists. \n    editPerson = () => {\n            console.log('editing person');\n            this.props.dispatch({type: 'UPDATE_EMPLOYEE', payload: this.state.employee});\n    }//\n\n    //retrieves the information for an employee where their ID matches the route parameters and sets their information to state. \n    //this will populate all of the input fields so that a user (Manager) can easily edit the existing details  \n    getEmployee = () => {\n        const { match: { params } } = this.props;\n        axios.get(`/api/staff/employee/profile?id=${params.personId}`)\n          .then((response)=> {\n              console.log(response.data[0]);\n            this.setState({ \n                employee: response.data[0]\n            });\n            this.props.dispatch({type: PEOPLE_ACTIONS.FETCH_SUPERVISORS})\n          }).catch((error)=> {\n              console.log('Error getting employee', error); \n          });\n    }\n    //changes the values of state based on input field changes \n    handleChangeFor = (property, event) => {\n            this.setState({\n                employee:{\n                    ...this.state.employee,\n                    [property]: event.target.value\n                }\n            })\n        }\n    //toggles whether or not an employee is active \n    handleCheck = () => {\n          this.setState({\n              inactive: true\n          })\n      }\n    render(){\n        return(\n            <div className=\"padding-bottom\">\n            <AppBar/>\n                <div className=\"edit-person-form\">\n                <h1>Edit Employee</h1>\n                <FormControl style={styles.formControl}>\n                    <TextField label=\"First Name\" value={this.state.employee.first_name} onChange={(event)=>this.handleChangeFor('first_name', event)}/>\n                </FormControl><br/>\n                <FormControl style={styles.formControl}>\n                    <TextField label=\"Last Name\" value={this.state.employee.last_name} onChange={(event)=>this.handleChangeFor('last_name', event)}/>\n                </FormControl><br/>\n                <FormControl style={styles.formControl}>\n                    <TextField label=\"Employee ID\" value={this.state.employee.employeeId} onChange={(event)=>this.handleChangeFor('employeeId', event)}/>\n                </FormControl><br/>\n                <FormControl style={styles.formControl}>\n                    <TextField label=\"Image Path\" value={this.state.employee.image_path} onChange={(event)=>this.handleChangeFor('image_path', event)}/>\n                </FormControl><br/>\n                <FormControl style={styles.formControl}>\n                    <FormLabel>Reassign Supervisor</FormLabel>\n                    <NativeSelect\n                        value={this.state.employee.supervisor_id}\n                        onChange={(event)=>this.handleChangeFor('supervisor_id', event)}>\n                      {this.props.supervisors.map((supervisor, i) => {\n                          return (\n                              <option key={i} value={supervisor.supervisor_id}>{supervisor.first_name} {supervisor.last_name}</option>\n                          );\n                      })}\n                    </NativeSelect>\n                </FormControl><br/>\n                <FormControl>\n                    <FormLabel>Remove?\n                    <Checkbox\n                    checked={this.state.employee.inactive}\n                    onChange={this.handleCheck}\n                    value={this.state.employee.inactive}/></FormLabel>\n                </FormControl>\n                <br/>\n                    <Button onClick={()=>this.props.history.push('/dashboard')}>Cancel</Button>\n                    <Button onClick={this.editPerson} variant=\"contained\" color=\"primary\">Save</Button>\n                    \n                </div>\n        </div>\n        );\n    }\n}\nexport default connect(mapStateToProps)(EditEmployee); ","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, IconButton} from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n})\nconst styles = {\n    grow: {\n        flexGrow: 1,\n    },\n    input: {\n        width: 100,\n    }, \n    color: {\n        color: '#f7fcff'\n    }\n}\nclass AddPersonAppBar extends React.Component {\n\n    handleClick = (event) => {\n        console.log('in handleClick');\n        this.props.history.push('/dashboard');\n        this.props.dispatch({ type: 'ADD_NAV_VALUE', payload: 'dashboard'});\n    }\n    render() {\n        return (\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                <IconButton onClick={this.handleClick}><ArrowBack style={styles.color}/></IconButton>\n                    <h3>Add Staff</h3>\n                    <div style={styles.grow} />\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(AddPersonAppBar));","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { FormControl, Input, Button, FormLabel, NativeSelect, Typography } from '@material-ui/core';\nimport './addperson.css';\nimport CloudUpload from '@material-ui/icons/CloudUpload';\nimport { connect } from 'react-redux';\nimport AppBar from './AddPersonAppBar.js';\nimport swal from 'sweetalert';\n\nconst mapStateToProps = state => ({\n  supervisor: state.people.staff.supervisors,\n  user: state.user\n});\nclass AddPerson extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      employeeId: '',\n      first_name: '',\n      last_name: '',\n      email_address: '',\n      role_id: '',\n      message: '',\n      supervisor_id: '', \n      image_path: ''\n    };\n  }\n  //gets the list of current supervisors to populate a select menu (assigning a supervisor to an employee) \n  //and sets up the configuration for cloudinary upload \n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_SUPERVISORS' });\n    this.config = {\n      cloud_name: 'dnjpvylxb',\n      upload_preset: 'ijxdygxf',\n    }\n  } // end componentDidMount\n\n  //if a user is not logged in, push back to the login page \n  componentDidUpdate() {\n    if (!this.props.user.isLoading && this.props.user.userName === null) {\n      this.props.history.push('/home');\n    }\n  } // end componentDidUpdate\n\n  // posts a new employee record to the database (employee is not a registered user and does not have its own username and password)\n  createEmployee = () => {\n    axios({\n      method: 'POST',\n      url: '/api/staff/employee',\n      data: this.state\n    }).then((response) => {\n      swal(`${this.state.first_name} ${this.state.last_name} created!`);\n      this.setState({\n        username: '',\n        password: '',\n        employeeId: '',\n        first_name: '',\n        last_name: '',\n        email_address: '',\n        role_id: '',\n        image_path: '',\n        message: '',\n      });\n      this.props.dispatch({ type: 'FETCH_ALL_EMPLOYEES' });\n    }).catch((error) => {\n      console.log('Error creating employee', error);\n      swal('Something went wrong. Please try again.');\n    })\n  }// end createEmployee\n\n  // creates a new user (Supervisor)\n  createSupervisor = (event) => {\n    event.preventDefault();\n    if (this.state.username === '' || this.state.password === '') {\n      this.setState({\n        message: 'Set a username and password!',\n      });\n    }\n    // making the request to the server to post the new user's registration\n    axios.post('/api/staff/register/supervisor', this.state)\n      .then((response) => {\n        if (response.status === 201) {\n          alert('Supervisor registered!');\n          this.setState({\n            username: '',\n            password: '',\n            employeeId: '',\n            first_name: '',\n            last_name: '',\n            email_address: '',\n            role_id: '',\n            image_path: '',\n            message: '',\n          });\n          swal(`${this.state.first_name} ${this.state.last_name} created!`);\n          this.props.dispatch({ type: 'FETCH_SUPERVISORS' });\n        } else {\n          this.setState({\n            message: 'Oops! That didn\\'t work. The username might already be taken. Try again!',\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({\n          message: 'Oops! Something went wrong! Is the server running?',\n        });\n      });\n  } // end createSupervisor\n\n  //sets the value of each input to state \n  handleChangeFor = (propertyName, event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }//end handleChangeFor\n\n  //opens the image upload widget and sets an uploaded image's URL to state \n  openCloudinary = (event) => {\n    event.preventDefault();\n    window.cloudinary.openUploadWidget(this.config, (error, result) => {\n      if (result) {\n        console.log(result.info.url);\n        this.setState({\n          ...this.state,\n          image_path: result.info.url\n        });\n      } else if (error) {\n        console.log('Error', error);\n      }\n    })\n  }//end openCloundinary\n\n  render() {\n    return (\n      <div className=\"add-person-view\">\n        <AppBar />\n        <div className=\"add-staff-div\">\n          <br />\n          <FormLabel className=\"label-spacing\">Role:</FormLabel>\n          <NativeSelect value={this.state.role_id} onChange={(event) => this.handleChangeFor('role_id', event)}>\n            <option value=\"\">Select One</option>\n            <option value=\"1\">Supervisor</option>\n            <option value=\"employee\">Employee</option>\n          </NativeSelect>\n        </div>\n  {/* A user selects what type of staff they'd like to add -- supervisor or employee. Then, the correct registration form renders on the DOM depending on what they chose.  */}\n        {this.state.role_id === '1' && <div className=\"add-person-form\">\n          <Typography>Set up a supervisor's profile and create a username and password for them.</Typography>\n          <br />\n          <FormControl>\n            <FormLabel>First Name</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('first_name', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Last Name</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('last_name', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Employee ID</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('employeeId', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Email</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('email_address', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Username</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('username', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Password</FormLabel>\n            <Input type=\"password\" onChange={(event) => this.handleChangeFor('password', event)} required />\n          </FormControl>\n          <br /> <br />\n          <Button onClick={this.createSupervisor} variant=\"contained\" color=\"primary\">Submit</Button>\n          <Button onClick={() => this.props.history.push('/dashboard')}>Cancel</Button>\n        </div>}\n        {this.state.role_id === \"employee\" && <div className=\"add-person-form\">\n          <FormControl>\n            <FormLabel>First Name</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('first_name', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Last Name</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('last_name', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Employee ID</FormLabel>\n            <Input type=\"text\" onChange={(event) => this.handleChangeFor('employeeId', event)} required />\n          </FormControl><br/>\n          <FormControl>\n            <Button onClick={this.openCloudinary}>\n                    <CloudUpload />&nbsp;Upload Image\n            </Button>\n          </FormControl><br/>\n          <FormControl>\n            <FormLabel>Assign Supervisor</FormLabel>\n            <NativeSelect onChange={(event) => this.handleChangeFor('supervisor_id', event)} required>\n              <option value=\"\">Select One</option>\n              {this.props.supervisor.map((supervisor, i) => {\n                return (\n                  <option value={supervisor.supervisor_id}>{supervisor.first_name} {supervisor.last_name}</option>\n                );\n              })}\n            </NativeSelect>\n          </FormControl>\n          <br /> <br />\n          <Button onClick={this.createEmployee} variant=\"contained\" color=\"primary\">Submit</Button>\n          <Button onClick={() => this.props.history.push('/dashboard')}>Cancel</Button>\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(AddPerson);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\n// const mapStateToProps = state => ({\n//   user: state.user,\n// });\n\nclass SupervisorDetailAppBar extends React.Component {\n  handleClick = (event) => {\n    this.props.history.push('/dashboard');\n  };\n\n  render() {\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton onClick={this.handleClick}><ArrowBack style={{color: '#f7fcff'}} /></IconButton>\n          <h3 style={{color: '#f7fcff'}}>Supervisor Detail</h3>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nexport default withRouter(connect()(SupervisorDetailAppBar));","import React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { Grid, Typography } from '@material-ui/core';\n\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\nimport { USER_ROLES } from '../../constants';\n\nimport SupervisorDetailAppBar from './SupervisorDetailAppBar';\nimport QuarterlySummary from '../DashboardView/SupervisorDashboard/Graphs/QuarterlySummary';\nimport PastThreeWeeks from '../DashboardView/SupervisorDashboard/Graphs/PastThreeWeeks';\nimport PastTwelveMonths from '../DashboardView/SupervisorDashboard/Graphs/PastTwelveMonths';\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  feedbackHistory: state.feedback.feedback.allFeedbackBySupervisor,\n});\n\nclass SupervisorDetailView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      supervisor: {},\n      feedbackHistory: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch({type: USER_ACTIONS.FETCH_USER});\n  }\n\n  componentDidUpdate() {\n    const { user, history } = this.props;\n\n    if (!user.isLoading && user.userName === null) {\n      history.push('/home');\n    } else if (!user.isLoading && user.userName && user.role !== USER_ROLES.MANAGER) {\n      history.push('/dashboard');\n    } else if (!user.isLoading && user.userName) {\n      if (!Object.keys(this.state.supervisor).length) {\n        this.getSupervisorInformation(this.props.match.params.personId);\n      }\n      if (!this.state.feedbackHistory.length) {\n        // console.log('getting supervisor feedback');\n        this.getSupervisorFeedback(this.props.match.params.personId);\n      }\n    }\n  }\n\n  getSupervisorInformation = supervisorId => {\n    axios.get(`/api/staff/supervisor/profile?id=${supervisorId}`)\n    .then(response => {\n      console.log('got supervisor profile');\n      this.setState({\n        supervisor: response.data[0]\n      });\n    }).catch(error => {\n      console.log(`/api/staff/supervisor/profile?id=${supervisorId} GET request error:`, error);\n    });\n  };\n\n  getSupervisorFeedback = supervisorId => {\n    axios.get(`/api/feedback/supervisor/${supervisorId}`)\n    .then(response => {\n      this.setState({\n        feedbackHistory: response.data\n      });\n    }).catch(error => {\n      console.log(`/api/feedback/supervisor/${supervisorId} GET request error:`, error);\n    });\n  };\n\n  render() {\n    const { supervisor, feedbackHistory } = this.state;\n    return (\n      <div>\n        <SupervisorDetailAppBar />\n        <Grid container spacing={0}>\n          <Grid item xs={12}>\n            <Typography variant=\"display1\" className=\"center\">{supervisor.first_name && `${supervisor.first_name} ${supervisor.last_name}`}</Typography>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subheading\" className=\"center\">Feedback given in the past quarter</Typography>\n            <QuarterlySummary data={feedbackHistory} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subheading\" className=\"center\">Feedback given in the past three weeks</Typography>\n            <PastThreeWeeks data={feedbackHistory} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Typography variant=\"subheading\" className=\"center\">Feedback given in the past twelve months</Typography>\n            <PastTwelveMonths data={feedbackHistory} />\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(SupervisorDetailView);","import React, {Component} from 'react'; \nimport {Input, Button, Typography} from '@material-ui/core'; \nimport axios from 'axios';\nimport './resetpassword.css'; \nimport swal from 'sweetalert'; \nimport moment from 'moment';\n\nclass ResetPassword extends Component {\n    constructor(props) {\n        super(props);\n        // User will input e-mail\n        this.state = { email: '' };\n    }\n    handleChange = (event) => {\n        this.setState({\n            email: event.target.value\n        })\n    }\n    handleSubmit = () => {\n        let today = Date.now();\n        today = moment(today).format();\n        axios({\n            method: 'PUT',\n            url: '/api/user/createtoken',\n            data: {email: this.state.email, today: today}\n        }).then((response) => {\n            swal('Please check your e-mail (including your spam folder) for a link to reset your password.');\n            //send an email with nodemailer that includes the token \n            this.props.history.push('/home'); \n        }).catch((error) => {\n            console.log(error);\n            swal('Something went wrong');\n        });\n    }\n    render(){\n        return(\n        <div>\n            <div className=\"reset-form\">\n            <Typography variant=\"headline\" className=\"margin-bottom\">Reset Password</Typography>\n            <Typography>Enter the email address associated with this account.</Typography>\n                <Input onChange={this.handleChange} />\n                <br/><br/>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>Submit</Button>\n                <Button onClick={()=>this.props.history.push('/home')}>Cancel</Button>\n            </div>\n        </div>\n        );\n    }\n}\nexport default ResetPassword; ","import React, {Component} from 'react'; \nimport {Input, Button, Typography, FormLabel} from '@material-ui/core'; \nimport axios from 'axios';\nimport '../../ResetPassword/resetpassword.css'; \nimport swal from 'sweetalert'\nclass NewPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            email_address: '',\n            password: '',\n            confirm_password: '', \n            today: '', \n            token: this.props.match.params.token\n        };\n    }\n    handleChange = (property, event) => {\n        const today = new Date(); \n        this.setState({\n            [property]: event.target.value, \n            today: today\n        });\n       \n    }\n    handleSubmit = () => {\n        if(this.state.password === this.state.confirm_password){\n            axios({\n                method: 'PUT',\n                url: '/api/user/resetpassword',\n                data: this.state\n            }).then((response) => {\n                swal('Update successful! Please login with your new password.');\n                //send an email with nodemailer that includes the token \n                this.props.history.push('/home'); \n            }).catch((error) => {\n                console.log(error);\n                swal('Something went wrong');\n            });\n        } else {\n            swal('Passwords do not match! Please try again.');\n        }\n       \n    }\n    render(){\n        return(\n            <div className=\"reset-form\">\n            <Typography variant=\"headline\">Create New Password</Typography>\n            <FormLabel>Email address:\n                <Input onChange={(event)=>this.handleChange('email_address', event)} /><br/>\n            </FormLabel>\n            <FormLabel>New password:\n                <Input type=\"password\" onChange={(event)=>this.handleChange('password', event)} /><br/>\n            </FormLabel>\n            <FormLabel>Confirm password:\n                <Input type=\"password\" onChange={(event)=>this.handleChange('confirm_password', event)} /><br/>\n            </FormLabel>\n                <Button onClick={this.handleSubmit}>Submit</Button>\n            </div>\n        );\n    }\n}\nexport default NewPassword; ","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport GridContainer from './components/GridContainer/GridContainer';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport RegisterPage from './components/RegisterPage/RegisterPage';\nimport DashboardView from './components/DashboardView/DashboardView';\nimport AllEmployeesView from './components/EmployeesView/AllEmployeesView';\nimport EmployeesView from './components/EmployeesView/EmployeesView';\nimport IndividualEmployeeSummaryView from './components/EmployeesView/IndividualEmployeeSummaryView/IndividualEmployeeSummaryView';\nimport FeedbackFormView from './components/FeedbackFormView/FeedbackFormView';\nimport FeedbackFormConfirmationView from './components/FeedbackFormConfirmationView/FeedbackFormConfirmationView';\nimport FeedbackDetailView from './components/FeedbackDetailView/FeedbackDetailView';\nimport EmployeeFormView from './components/EmployeeFormView/EmployeeFormView';\nimport UserPage from './components/UserPage/UserPage';\nimport EditSupervisor from './components/EditPerson/EditSupervisor'; \nimport EditEmployee from './components/EditPerson/EditEmployee'; \nimport AddPerson from './components/AddPerson/AddPerson'; \nimport SupervisorDetailView from './components/SupervisorDetailView/SupervisorDetailView';\nimport ResetPassword from './components/ResetPassword/ResetPassword'; \nimport NewPassword from './components/ResetPassword/NewPassword/NewPassword';\nimport './styles/main.css';\n\nconst App = () => (\n  <GridContainer>\n    <Router>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/home\" />\n        <Route\n          path=\"/home\"\n          component={LoginPage}\n        />\n        <Route\n          path=\"/register\"\n          component={RegisterPage}\n        />\n        <Route \n          path=\"/dashboard\"\n          component={DashboardView}\n        />\n        <Route \n          path=\"/employees\"\n          component={EmployeesView}\n        />\n        <Route \n          path=\"/allEmployees\"\n          component={AllEmployeesView}\n        />\n        <Route\n          path=\"/individualEmployee\"\n          component={IndividualEmployeeSummaryView}\n        />\n        <Route \n          path=\"/feedback/new\"\n          component={FeedbackFormView}\n        />\n        <Route \n          path=\"/feedback/confirmation\"\n          component={FeedbackFormConfirmationView}\n        />\n        <Route \n          path=\"/feedback/detail/:feedbackId\"\n          component={FeedbackDetailView}\n        />\n        <Route \n          path=\"/employee/new\"\n          component={EmployeeFormView}\n        />\n        <Route\n          path=\"/user\"\n          component={UserPage}\n        />\n        <Route\n          path=\"/addperson\"\n          component={AddPerson}\n        />\n        <Route\n          exact path=\"/reset/password\"\n          component={ResetPassword}\n        />\n        <Route \n          path=\"/view/supervisor/:personId\"\n          component={SupervisorDetailView}\n        />\n        <Route \n        path=\"/edit/supervisor/:personId\" \n        component={EditSupervisor}/>\n       <Route \n        path=\"/edit/employee/:personId\" \n        component={EditEmployee}/>\n         <Route \n        exact path=\"/reset/password/:token\" \n        component={NewPassword}/>\n      <Route render={() => <h1>404</h1>} />\n      </Switch>\n    </Router>\n  </GridContainer>\n);\n\nexport default App;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\nimport { callUser } from '../requests/userRequests';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    // sets that the async request is in progress\n    yield put({ type: USER_ACTIONS.REQUEST_START });\n    const user = yield callUser();\n    yield put({\n      type: USER_ACTIONS.SET_USER,\n      user,\n    });\n    // sets that the async request is finished\n    yield put({\n      type: USER_ACTIONS.REQUEST_DONE,\n    });\n  } catch (error) {\n    // sets that the async request is finished\n    yield put({\n      type: USER_ACTIONS.REQUEST_DONE,\n    });\n    yield put({\n      type: USER_ACTIONS.USER_FETCH_FAILED,\n      message: error.data || \"FORBIDDEN\",\n    });\n  }\n}\n/*\n  Starts fetchUser on each dispatched `FETCH_USER` action.\n  Allows concurrent fetches of user.\n*/\n// function* userSaga() {\n//   yield takeEvery('FETCH_USER', fetchUser);\n// }\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"FETCH_USER\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* userSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_USER, fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\n\n//calls /user on our server to retrieve user data\nexport function callUser() {\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.get('api/user', config)\n    .then(response => response.data)\n    .catch((error) => { throw error.response || error; });\n}\n\nexport function placeholder() {\n  console.log('hi');\n}\n","import axios from 'axios';\n\nexport function callLogin(payload) {\n  const body = ({\n    username: payload.username,\n    password: payload.password,\n  });\n\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.post('api/user/login', body, config)\n    .then(response => response.data)\n    .catch((error) => {\n      throw error.response || error;\n    });\n}\n\nexport function callLogout() {\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.get('api/user/logout', config)\n    .then(response => response.data)\n    .catch((error) => {\n      throw error.response || error;\n    });\n}\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { LOGIN_ACTIONS } from '../actions/loginActions';\nimport { USER_ACTIONS } from '../actions/userActions';\nimport { callLogin, callLogout } from '../requests/loginRequests';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    yield put({ type: LOGIN_ACTIONS.CLEAR_LOGIN_ERROR });\n    // sets that we are starting an async request\n    yield put({ type: LOGIN_ACTIONS.REQUEST_START });\n    yield callLogin(action.payload);\n    // sets that the async request is finished\n    yield put({\n      type: LOGIN_ACTIONS.LOGIN_REQUEST_DONE,\n    });\n    yield put({\n      type: USER_ACTIONS.FETCH_USER,\n    });\n  } catch (error) {\n    // sets that the async request is finished\n    yield put({\n      type: LOGIN_ACTIONS.LOGIN_REQUEST_DONE,\n    });\n    if (error.status === 401) {\n      yield put({\n        type: LOGIN_ACTIONS.LOGIN_FAILED,\n        message: error.message,\n      });\n    } else {\n      yield put({\n        type: LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE,\n        message: error.message,\n      });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    yield callLogout(action);\n    yield put({\n      type: USER_ACTIONS.UNSET_USER,\n    });\n  } catch (error) {\n    console.log('LOGOUT FAILED -- CHECK YOUR SERVER', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest(LOGIN_ACTIONS.LOGIN, loginUser);\n  yield takeLatest(LOGIN_ACTIONS.LOGOUT, logoutUser);\n}\n\nexport default loginSaga;\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { PEOPLE_ACTIONS } from '../actions/peopleActions';\nimport axios from 'axios'; \nimport swal from 'sweetalert';\n// fetch all employees belonging to a supervisor\n// function* fetchEmployees(){\n\n//     try {\n//         const employeeResponse = yield call(axios.get, '/api/staff/employees');\n//         const responseAction = {type: PEOPLE_ACTIONS.SET_SUPERVISOR_EMPLOYEES, payload: employeeResponse.data};\n//         yield put(responseAction);\n//     } catch(error){\n//         console.log('Cannot get employees', error); \n//     }\n// }\n\n// fetch all employees in the database\nfunction* fetchAllEmployees(){\n    try {\n        const allEmployeeResponse = yield call(axios.get, '/api/staff/allEmployees');\n        const responseAction = {type: PEOPLE_ACTIONS.SET_ALL_EMPLOYEES, payload: allEmployeeResponse.data};\n        yield put(responseAction);\n    } catch(error){\n        console.log('Cannot get all employees', error);\n    }\n}\n\n// will be called to add a new employee & then it'll fetch all the employees\nfunction* addEmployee(action){\n    try {\n        yield call(axios.post, '/api/staff/employee', action.payload);\n        yield put (swal(`${action.payload.first_name} ${action.payload.last_name} created!`));\n        yield put({type: PEOPLE_ACTIONS.FETCH_ALL_EMPLOYEES});\n    } catch(error){\n        console.log('Cannot add new employee', error);  \n    }\n}\n\n//will be called to delete an employee & then it'll fetch all the employees\nfunction* deleteEmployee(action){\n    try {\n        yield call(axios.delete, `/api/staff/employee?id=${action.payload}`);\n        yield put({type: PEOPLE_ACTIONS.FETCH_ALL_EMPLOYEES});\n    } catch(error){\n        console.log('Cannot delete employee', error);\n    }\n}\n\n//will be called to updated an employee & then it'll fetch all the employees\nfunction* updateEmployee(action){\n    try {\n        yield call(axios.put, '/api/staff/employee', action.payload);\n        // yield put(swal('Success!', 'Employee edited', 'success')); \n        yield put({type: PEOPLE_ACTIONS.FETCH_ALL_EMPLOYEES});\n    } catch(error){\n        console.log('Cannot update employee', error);\n    }\n}\n\nfunction* employeeSaga(){\n    // yield takeLatest(PEOPLE_ACTIONS.FETCH_EMPLOYEES, fetchEmployees);\n    yield takeLatest(PEOPLE_ACTIONS.FETCH_ALL_EMPLOYEES, fetchAllEmployees);\n    yield takeLatest(PEOPLE_ACTIONS.ADD_EMPLOYEE, addEmployee);\n    yield takeLatest(PEOPLE_ACTIONS.DELETE_EMPLOYEE, deleteEmployee);\n    yield takeLatest(PEOPLE_ACTIONS.UPDATE_EMPLOYEE, updateEmployee);\n}\nexport default employeeSaga; ","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { PEOPLE_ACTIONS } from '../actions/peopleActions';\nimport axios from 'axios'; \n// will be called to fetch all supervisors \nfunction* fetchSupervisors(){\n    try{\n        const supervisorResponse = yield call(axios.get, '/api/staff/supervisors');\n        const responseAction = {type: PEOPLE_ACTIONS.SET_SUPERVISORS, payload: supervisorResponse.data};\n        yield put(responseAction);\n    } catch(error){\n        console.log('Cannot get supervisors', error); \n    }\n}\n\n//will be called to add a new supervisor & then it'll fetch all the supervisors\nfunction* addSupervisor(action){\n    try {\n        yield call(axios.post, '/api/staff/supervisor', action.payload);\n        yield put({type: PEOPLE_ACTIONS.FETCH_SUPERVISORS});\n    } catch(error){\n        console.log('Cannot add new supervisor', error);  \n    }\n}\n\n//will be called to updated a supervisor & then it'll fetch all the supervisors\nfunction* updateSupervisor(action){\n    try {\n        yield call(axios.put, '/api/staff/supervisor', action.payload);\n        yield put({type: PEOPLE_ACTIONS.FETCH_SUPERVISORS});\n    } catch(error){\n        console.log('Cannot update supervisor', error);\n    }\n}\n\n//will be called to delete a supervisor & then it'll fetch all the supervisors\nfunction* deleteSupervisor(action){\n    try {\n        yield call(axios.delete, `/api/staff/supervisor?id=${action.payload}`);\n        yield put({type: PEOPLE_ACTIONS.FETCH_SUPERVISORS});\n    } catch(error){\n        console.log('Cannot delete supervisor', error);\n    }\n}\n\nfunction* supervisorSaga(){\n    yield takeLatest(PEOPLE_ACTIONS.FETCH_SUPERVISORS, fetchSupervisors);\n    yield takeLatest(PEOPLE_ACTIONS.ADD_SUPERVISOR, addSupervisor);\n    yield takeLatest(PEOPLE_ACTIONS.UPDATE_SUPERVISOR, updateSupervisor);\n    yield takeLatest(PEOPLE_ACTIONS.DELETE_SUPERVISOR, deleteSupervisor);\n}\nexport default supervisorSaga; ","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FEEDBACK_ACTIONS } from '../actions/feedbackActions';\nimport axios from 'axios';\n\n// fetch all feedback pertaining to a specific employee\nfunction* fetchCurrentEmployeeFeedback(action){\n    try {\n        const feedbackResponse = yield call(axios.get, `/api/feedback/employee/${action.payload.id}`);\n        console.log('in fetchCurrentEmployeeFeedback');\n        const responseAction = {type: FEEDBACK_ACTIONS.SET_CURRENT_EMPLOYEE_FEEDBACK, payload: feedbackResponse.data};\n        yield put(responseAction);\n    } catch(error){\n        console.log('Cannot get employee feedback', error);\n    }\n}\n// fetch all feedback created by a specific supervisor\nfunction* fetchAllFeedbackByCurrentSupervisor(){\n    try {\n        const feedbackResponse = yield call(axios.get, '/api/feedback/');\n        const responseAction = {type: FEEDBACK_ACTIONS.SET_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR, payload: feedbackResponse.data};\n        yield put(responseAction);\n    } catch(error){\n        console.log('Cannot get all feedback that manager has given', error);\n    }\n}\n// fetches all feedback created by all supervisors which a manager monitors\nfunction* fetchAllFeedbackByManagerSupervisors(){\n  try{\n      const feedbackResponse = yield call(axios.get, '/api/feedback/supervisors/all');\n      const responseAction = {type: FEEDBACK_ACTIONS.SET_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS, payload: feedbackResponse.data};\n      yield put(responseAction);\n  } catch(error){\n      console.log('Cannot get all feedback for all managers', error);\n  }\n}\n// adds a new feedback record\nfunction* addFeedback(action){\n  console.log('addFeedback saga called:', action);\n  try{\n    const postResponse = yield call(axios.post, '/api/feedback/', action.payload);\n    const postedFeedback = postResponse.data;\n    console.log('just posted feedback:', postedFeedback);\n    yield put({\n      type: FEEDBACK_ACTIONS.FEEDBACK_POST_SUCCESS,\n      payload: postedFeedback\n    });\n    //    yield put({type: FEEDBACK_ACTIONS.FETCH_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR}); \n  } catch(error){\n    console.log('Cannot add new feedback', error);\n  }\n}\n// updates feedback record\nfunction* updateFeedback(action){\n    try{\n        yield call(axios.put, '/api/feedback/', action.payload);\n        yield put({ type: FEEDBACK_ACTIONS.FETCH_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR });\n    } catch (error) {\n        console.log('Cannot edit feedback', error);\n    }\n}\nfunction* feedbackSaga(){\n    yield takeLatest(FEEDBACK_ACTIONS.FETCH_CURRENT_EMPLOYEE_FEEDBACK, fetchCurrentEmployeeFeedback);\n    yield takeLatest(FEEDBACK_ACTIONS.FETCH_ALL_FEEDBACK_BY_CURRENT_SUPERVISOR, fetchAllFeedbackByCurrentSupervisor);\n    yield takeLatest(FEEDBACK_ACTIONS.FETCH_ALL_FEEDBACK_BY_MANAGER_SUPERVISORS, fetchAllFeedbackByManagerSupervisors);\n    yield takeLatest(FEEDBACK_ACTIONS.ADD_FEEDBACK, addFeedback);\n    yield takeLatest(FEEDBACK_ACTIONS.UPDATE_FEEDBACK, updateFeedback);\n}\n\nexport default feedbackSaga;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { FOLLOW_UP_ACTIONS } from '../actions/followupActions';\nimport axios from 'axios';\n\nfunction* fetchAllPendingFollowup() {\n  try {\n    const followupResponse = yield call(axios.get, '/api/followup/pending/all');\n    yield put({\n      type: FOLLOW_UP_ACTIONS.SET_ALL_PENDING_FOLLOWUP,\n      payload: followupResponse.data\n    });\n  } catch(error) {\n    console.log('fetchAllSupervisorPendingFollowups error:', error);\n  }\n}\n\nfunction* fetchEmployeePendingFollowup(action) {\n  try {\n    const employeeId = action.payload;\n    const followupResponse = yield call(axios.get, `/api/followup/pending/employee/${employeeId}`);\n    yield put({\n      type: FOLLOW_UP_ACTIONS.SET_EMPLOYEE_PENDING_FOLLOWUP,\n      payload: followupResponse.data\n    });\n  } catch(error) {\n    console.log('fetchEmployeePendingFollowup error:', error);\n  }\n}\n\n// the id of the employee and the follow up date need to passed as the payload to this action\nfunction* addFollowup(action) {\n  try {\n    console.log('addFollowup saga:', action);\n    const data = action.payload;\n    const postResponse = yield call(axios.post, '/api/followup', data);\n    const postedFollowup = postResponse.data;\n    yield put({\n      type: FOLLOW_UP_ACTIONS.FOLLOWUP_POST_SUCCESS,\n      payload: postedFollowup\n    });\n  } catch(error) {\n    console.log('addFollowup error:', error);\n  }\n}\n\n// the id of the followup needs to be passed as the payload to this action\nfunction* completeFollowup(action) {\n  try {\n    const followupId = action.payload;\n    yield call(axios.put, `/api/followup/${followupId}/complete`);\n    // anything to refresh after this call? what?\n  } catch(error) {\n    console.log('completeFollowup error:', error);\n  }\n}\n\nfunction* followupSaga() {\n  yield takeLatest(FOLLOW_UP_ACTIONS.FETCH_ALL_PENDING_FOLLOWUP, fetchAllPendingFollowup);\n  yield takeLatest(FOLLOW_UP_ACTIONS.FETCH_EMPLOYEE_PENDING_FOLLOWUP, fetchEmployeePendingFollowup);\n  yield takeLatest(FOLLOW_UP_ACTIONS.ADD_FOLLOWUP, addFollowup);\n  yield takeLatest(FOLLOW_UP_ACTIONS.COMPLETE_FOLLOWUP, completeFollowup);\n}\n\nexport default followupSaga;","import { call, put, takeLatest } from 'redux-saga/effects';\nimport { QUALITY_ACTIONS } from '../actions/qualityActions';\nimport axios from 'axios';\n\n// FETCH_FEEDBACK_QUALITY_CATEGORIES: 'FETCH_FEEDBACK_QUALITY_CATEGORIES',\n//   SET_FEEDBACK_QUALITY_CATEGORIES: 'SET_FEEDBACK_QUALITY_CATEGORIES'\nfunction* fetchFeedbackQualityCategories() {\n  try {\n    const qualitiesResponse = yield call(axios.get, '/api/quality');\n    yield put({\n      type: QUALITY_ACTIONS.SET_FEEDBACK_QUALITY_CATEGORIES,\n      payload: qualitiesResponse.data\n    });\n  } catch(error) {\n    console.log('Cannot get feedback qualities:', error);\n  }\n}\n\nfunction* qualitySaga() {\n  yield takeLatest(QUALITY_ACTIONS.FETCH_FEEDBACK_QUALITY_CATEGORIES, fetchFeedbackQualityCategories);\n}\n\nexport default qualitySaga;","import { all } from 'redux-saga/effects';\nimport userSaga from './userSaga';\nimport loginSaga from './loginSaga';\nimport employeeSaga from './employeeSaga';\n\nimport supervisorSaga from './supervisorSaga';\nimport feedbackSaga from './feedbackSaga';\nimport followupSaga from './followupSaga';\nimport qualitySaga from './qualitySaga';\n\nexport default function* rootSaga() {\n  yield all([\n    userSaga(),\n    loginSaga(),\n    employeeSaga(),\n    supervisorSaga(),\n    feedbackSaga(),\n    followupSaga(),\n    qualitySaga(),\n    // watchIncrementAsync()\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\n\nimport reducer from './redux/reducers'; // imports ./redux/reducers/index.js\n\nimport App from './App';\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\n// Initializing to an empty object, but here is where you could\n// preload your redux state with initial values (from localStorage, perhaps)\nconst preloadedState = {};\nconst middlewares = [];\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\n\n// flag to only use the logger if in development mode\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(\n  reducer,\n  preloadedState,\n  applyMiddleware(...middlewares),\n);\n// Material UI Theme configuration \nconst theme = createMuiTheme({ \n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#6c7cff',\n      main: '#0050ff',\n      dark: '#0028ca',\n      contrastText: '#f7fcff'\n    },\n    secondary: {\n      light: '#a3ff7b',\n      main: '#6bf048',\n      dark: '#28bc00',\n      constrastText: '#1f2325',\n    }\n  }\n})\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}><MuiThemeProvider theme={theme}>\n    <App />\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}